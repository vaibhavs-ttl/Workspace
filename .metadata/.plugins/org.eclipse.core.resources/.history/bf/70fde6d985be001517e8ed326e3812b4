package com.ttl.customersocialapp;

import java.util.ArrayList;
import java.util.List;

import com.ttl.adapter.ResponseCallback;
import com.ttl.model.UserDetails;
import com.ttl.model.VehcontactScheduler;
import com.ttl.webservice.Constants;
import com.ttl.webservice.WebServiceCall;

import android.app.Fragment;
import android.content.Context;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

public class VehicleDetailsFragment extends Fragment {

	private LinearLayout ll1,ll2,ll3,ll4,ll5,ll6;
	private RelativeLayout rltl1,rltl2,rltl3,rltl4,rltl5,rltl6;
	private ImageView img_arrow;
	//private InstantAutoComplete spinner_chassisno;
	private Spinner spinner_chassis;
	private VehcontactScheduler vehdetails;
	private TextView text_chassis,text_engine,text_fuel,text_model,text_varient,text_color,text_saledate,text_wend_date,text_lastservicedate,text_lastserviceKM,text_lastservicedealer,
	                 text_dealer,text_dealercode,text_company,text_policy,text_policy_sdate,text_policy_edate
	                 ,text_ew_policyNumber,text_war_sdate,text_war_edate,ew_policyNumber,
	                 text_addr,text_phone,text_fname,text_war_sKM,text_war_eKM, text_lname;
	 private TextView err_veh,err_ins,err_warr,err_cust;               
	                
		List<String> chassisvalues = new ArrayList<String>();

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		 View v = inflater.inflate(R.layout.fragment_vehicledetails, container, false);
		 ll1 = (LinearLayout) v.findViewById(R.id.ll1);
		 ll2 = (LinearLayout) v.findViewById(R.id.ll2);
		 ll3 = (LinearLayout) v.findViewById(R.id.ll3);
		 ll4 = (LinearLayout) v.findViewById(R.id.ll4);
		 ll5 = (LinearLayout) v.findViewById(R.id.ll5);
		 ll6 = (LinearLayout) v.findViewById(R.id.ll6);
		 rltl1 = (RelativeLayout)v.findViewById(R.id.rltl1);
		 rltl2 = (RelativeLayout)v.findViewById(R.id.rltl2);
		 rltl3 = (RelativeLayout)v.findViewById(R.id.rltl3);
		 rltl4 = (RelativeLayout)v.findViewById(R.id.rltl4);
		 rltl5 = (RelativeLayout)v.findViewById(R.id.rltl5);
		 rltl6 = (RelativeLayout)v.findViewById(R.id.rltl6);
		 img_arrow  = (ImageView) v.findViewById(R.id.img_arrow);
		// spinner_chassisno = (InstantAutoComplete) v.findViewById(R.id.spinner_chassisno);
		 spinner_chassis = (Spinner) v.findViewById(R.id.spinner_chassisNo);
		 
		 text_chassis = (TextView) v.findViewById(R.id.text_chassis);
		 text_engine = (TextView) v.findViewById(R.id.text_engine);
		 text_fuel = (TextView) v.findViewById(R.id.text_fuel);
		 text_model = (TextView) v.findViewById(R.id.text_model);
		 text_varient = (TextView) v.findViewById(R.id.text_varient);
		 text_color = (TextView) v.findViewById(R.id.text_color);
		 text_saledate = (TextView) v.findViewById(R.id.text_saledate);
		 text_wend_date = (TextView) v.findViewById(R.id.text_wend_date);
		 text_lastservicedate = (TextView) v.findViewById(R.id.text_lastservicedate);
		 text_lastserviceKM = (TextView) v.findViewById(R.id.text_lastserviceKM);
		 text_lastservicedealer = (TextView) v.findViewById(R.id.text_lastservicedealer);
		 text_dealer = (TextView) v.findViewById(R.id.text_dealer);
		 text_dealercode = (TextView) v.findViewById(R.id.text_dealercode);
		 text_company = (TextView) v.findViewById(R.id.text_company);
		 text_policy = (TextView) v.findViewById(R.id.text_policy);
		 text_policy_sdate = (TextView) v.findViewById(R.id.text_policy_sdate);
		 text_policy_edate = (TextView) v.findViewById(R.id.text_policy_edate);
		 text_ew_policyNumber = (TextView) v.findViewById(R.id.text_ew_policyNumber);
		 text_war_sdate = (TextView) v.findViewById(R.id.text_war_sdate);
		 text_war_edate = (TextView) v.findViewById(R.id.text_war_edate);
		 text_war_sKM = (TextView) v.findViewById(R.id.text_war_sKM);
		 text_war_eKM = (TextView) v.findViewById(R.id.text_war_eKM);
		 ew_policyNumber = (TextView) v.findViewById(R.id.ew_policyNumber);
		 
		 text_addr = (TextView) v.findViewById(R.id.text_address);
		 text_phone = (TextView) v.findViewById(R.id.text_phone);
		 text_fname = (TextView) v.findViewById(R.id.text_fname);
		 text_lname = (TextView) v.findViewById(R.id.text_lname);

		 
		 err_veh = (TextView) v.findViewById(R.id.err_veh);
		 err_ins = (TextView) v.findViewById(R.id.err_ins);
		 err_warr = (TextView) v.findViewById(R.id.err_warr);
		 err_cust = (TextView) v.findViewById(R.id.err_cust);

	//	 MAT611464BPN97534
		 //357151BVZ804302
		 chassisvalues.add("Chassis Number");
		 int size = new UserDetails().getRegNumberList().size();
	       for(int i = 0 ; i<size; i++)
	       {
	    	   chassisvalues.add(new UserDetails().getRegNumberList().get(i).get("chassis_num"));
	       }
		 ArrayAdapter<String> regno = new ArrayAdapter<String>(getActivity(),android.R.layout.simple_spinner_item, chassisvalues);
	       regno.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
	       spinner_chassis.setAdapter(regno);
		 
		 spinner_chassis.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {

			@Override
			public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
				// TODO Auto-generated method stub
				if(position!=0){
				
				
				String req = "<SOAP:Envelope xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\">"
						  +"<SOAP:Body>"
						  +"<GetVechcontactScheduler_CSB xmlns=\"src.com.CSB\" preserveSpace=\"no\" qAccess=\"0\" qValues=\"\">"
						  +"<chassis_no>"+spinner_chassis.getSelectedItem().toString()+"</chassis_no>"
						    +"</GetVechcontactScheduler_CSB>"
						  +"</SOAP:Body>"
						+"</SOAP:Envelope>";
				 
				String req1 =  "<SOAP:Envelope xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\">"
				  +"<SOAP:Body>"
				    +"<GetAMCDetailsScheduler_CSB xmlns=\"src.com.CSB\" preserveSpace=\"no\" qAccess=\"0\" qValues=\"\">"
				    +"<chassis_no>"+spinner_chassis.getSelectedItem().toString()+"</chassis_no>"
				    +"</GetAMCDetailsScheduler_CSB>"
				  +"</SOAP:Body>"
				+"</SOAP:Envelope>";
//				 
//				
				String req2 = "<SOAP:Envelope xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\">"
						+"<SOAP:Body>"
						+"<GetAgreementScheduler_CSB xmlns=\"src.com.CSB\" preserveSpace=\"no\" qAccess=\"0\" qValues=\"\">"
				      +"<chassis_no>"+spinner_chassis.getSelectedItem().toString()+"</chassis_no>"
				    +"</GetAgreementScheduler_CSB>"
				  +"</SOAP:Body>"
				+"</SOAP:Envelope>";
				new WebServiceCall(getActivity(), req1, "GetAMCDetailsScheduler_CSB", new ResponseCallback() {
					
					@Override
					public void onResponseReceive(Object object) {
						// TODO Auto-generated method stub
						
					}
					
					@Override
					public void onErrorReceive(String string) {
						// TODO Auto-generated method stub
						
					}
				}, "Getting AMC").execute();
				
				new WebServiceCall(getActivity(), req2, "GetAgreementScheduler_CSB", new ResponseCallback() {
					
					@Override
					public void onResponseReceive(Object object) {
						// TODO Auto-generated method stub
						
					}
					
					@Override
					public void onErrorReceive(String string) {
						// TODO Auto-generated method stub
						
					}
				}, "Getting Agreement").execute();
				 
//					String req = "<SOAP:Envelope xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\">"
//							  +"<SOAP:Body>"
//							  +"<GetVechcontactScheduler_CSB xmlns=\"src.com.CSB\" preserveSpace=\"no\" qAccess=\"0\" qValues=\"\">"
//							  +"<chassis_no>"+spinner_chassis.getSelectedItem().toString()+"</chassis_no>"
//							    +"</GetVechcontactScheduler_CSB>"
//							  +"</SOAP:Body>"
//							+"</SOAP:Envelope>";
					
					new WebServiceCall(getActivity(), req, Constants.GetVechcontactScheduler_CSB, new ResponseCallback() {

						@Override
						public void onResponseReceive(Object object) {
							rltl1.setVisibility(View.VISIBLE);
							rltl2.setVisibility(View.VISIBLE);
							rltl3.setVisibility(View.VISIBLE);
							rltl6.setVisibility(View.VISIBLE);
							
							ll1.setClickable(true);
							ll2.setClickable(true);
							ll3.setClickable(true);
							ll6.setClickable(true);
							
							err_veh.setVisibility(View.GONE);
							err_ins.setVisibility(View.GONE);
							err_warr.setVisibility(View.GONE);
							err_cust.setVisibility(View.GONE);
							
							
							vehdetails =  (VehcontactScheduler) object;
							String[] date;
								Log.i("GetVechcontactScheduler_CSB", vehdetails.ASSET_NUM);
								text_chassis.setText(vehdetails.ASSET_NUM);
								text_engine.setText(vehdetails.ENGINE_NUM);
								text_fuel.setText(vehdetails.FUEL_TYPE);
								text_model.setText(vehdetails.PPL);
								text_varient.setText(vehdetails.PL);
								text_color.setText(vehdetails.COLOR);
								if(!TextUtils.isEmpty(vehdetails.FIRST_SALE_DT)){
									date = vehdetails.FIRST_SALE_DT.split("T");
								text_saledate.setText(date[0]);
								}
								
								if(!TextUtils.isEmpty(vehdetails.WARRANTY_END_DT)){
									String [] date1 = vehdetails.WARRANTY_END_DT.split("T");
									text_wend_date.setText(date1[0]);
								}
								
								if(!TextUtils.isEmpty(vehdetails.LAST_SERVICE_DT)){
									date = vehdetails.LAST_SERVICE_DT.split("T");
									text_lastservicedate.setText(date[0]);
								}
								
								text_lastserviceKM.setText(vehdetails.LAST_SERVICE_KM);
								text_lastservicedealer.setText(vehdetails.LAST_SERVICE_DLR);
								text_dealer.setText(vehdetails.SELLING_DLR);
								text_dealercode.setText(vehdetails.SELLING_DLR_CODE);
								text_company.setText(vehdetails.INSURENCE_COMPONY_NAME);
								text_policy.setText(vehdetails.POLICY_NUMBER);
								if(!TextUtils.isEmpty(vehdetails.POLICY_ST_DT)){
								date = vehdetails.POLICY_ST_DT.split("T");
								text_policy_sdate.setText(date[0]);
								}
								if(!TextUtils.isEmpty(vehdetails.POLICY_END_DT)){
									date = vehdetails.POLICY_END_DT.split("T");
									text_policy_edate.setText(date[0]);
								}
								if(vehdetails.EXTND_WRNTY_FLG.equals("Y")){
									text_ew_policyNumber.setText(vehdetails.EW_POLICY_NUM);
								if(!TextUtils.isEmpty(vehdetails.EXTND_WRNTY_ST_DT)){
									date = vehdetails.EXTND_WRNTY_ST_DT.split("T");
									text_war_sdate.setText(date[0]);
								}
								if(!TextUtils.isEmpty(vehdetails.EXTND_WRNTY_END_DT)){
									String[]date1 = vehdetails.EXTND_WRNTY_END_DT.split("T");
									text_war_edate.setText(date1[0]);
								}
								
								text_war_sKM.setText(vehdetails.EW_ST_KM);
								text_war_eKM.setText(vehdetails.EW_END_KM);
								
								}
//								else if(vehdetails.EXTND_WRNTY_FLG.equals("N")||TextUtils.isEmpty(vehdetails.EXTND_WRNTY_FLG)){
//									ew_policyNumber.setText("NO DATA");
//								}
								text_fname.setText(vehdetails.CON_FSTNAME);
								text_lname.setText(vehdetails.CON_LSTNAME);
								text_addr.setText(vehdetails.CON_ADDR_LINE1);
								text_phone.setText(vehdetails.CON_CELL_PH_NUM);
								
							
						}

						@Override
						public void onErrorReceive(String string) {
							
							Toast.makeText(getActivity(), string, Toast.LENGTH_SHORT).show();
							rltl1.setVisibility(View.GONE);
							rltl2.setVisibility(View.GONE);
							rltl3.setVisibility(View.GONE);
							rltl6.setVisibility(View.GONE);
							
							ll1.setClickable(false);
							ll2.setClickable(false);
							ll3.setClickable(false);
							ll6.setClickable(false);
							
							err_veh.setVisibility(View.VISIBLE);
							err_veh.setText("NO DATA");
							err_ins.setVisibility(View.VISIBLE);
							err_ins.setText("NO DATA");
							err_warr.setVisibility(View.VISIBLE);
							err_warr.setText("NO DATA");
							err_cust.setVisibility(View.VISIBLE);
							err_cust.setText("NO DATA");
							
						}
					},"Populating Data..").execute();  
				}
			}

			@Override
			public void onNothingSelected(AdapterView<?> parent) {
				// TODO Auto-generated method stub
				
			}
			 
		 });
		 
		
		 ll1.setOnClickListener(new View.OnClickListener() {
				
				@Override
				public void onClick(View v) {
					toggle_contents(rltl1);
				}
			});
		 ll2.setOnClickListener(new View.OnClickListener() {
				
				@Override
				public void onClick(View v) {
					toggle_contents(rltl2);
				}
			});
		 ll3.setOnClickListener(new View.OnClickListener() {
				
				@Override
				public void onClick(View v) {
					toggle_contents(rltl3);
				}
			});
		 ll4.setOnClickListener(new View.OnClickListener() {
				
				@Override
				public void onClick(View v) {
					toggle_contents(rltl4);
				}
			});
		 ll5.setOnClickListener(new View.OnClickListener() {
				
				@Override
				public void onClick(View v) {
					toggle_contents(rltl5);
				}
			});
		 ll6.setOnClickListener(new View.OnClickListener() {
				
				@Override
				public void onClick(View v) {
					toggle_contents(rltl6);
				}
			});
		 return v;
	}
	
	private void toggle_contents(View v){
		if(v.isShown()){
		   slide_up(getActivity(), v);
		   v.setVisibility(View.GONE);
		  }
		  else{
		    v.setVisibility(View.VISIBLE);
		    slide_down(getActivity(), v);
		  }
	}
	
	private void slide_down(Context ctx, View v){
		// Toast.makeText(ctx, "SLIDING DOWN", Toast.LENGTH_SHORT).show();
		  Animation a = AnimationUtils.loadAnimation(ctx, R.anim.slide_down);
		  if(a != null){
		     a.reset();
		     if(v != null){
		      v.clearAnimation();
		      v.startAnimation(a);
		     }
		  }
		  
		  switch (v.getId()) {
		case  R.id.rltl1:
			setArrowImage(img_arrow, R.drawable.downarrow);
			break;

		default:
			break;
		}

			  
		}
	private void slide_up(Context ctx, View v){
		//Toast.makeText(ctx, "SLIDING UP", Toast.LENGTH_SHORT).show();
		  Animation a = AnimationUtils.loadAnimation(ctx, R.anim.slide_up);
		  if(a != null){
		     a.reset();
		     if(v != null){
		      v.clearAnimation();
		      v.startAnimation(a);
		     }
		  }
		
	  		switch (v.getId()) {
			case  R.id.rltl1:
				setArrowImage(img_arrow, R.drawable.orangerightarrow);
				break;

			default:
				break;
			}
		}
	private void setArrowImage(ImageView arrow,int image){
		arrow.setMaxHeight(20);
		arrow.setMaxWidth(20);
		arrow.setImageDrawable(getResources().getDrawable(image));
	}
}
