<<<<<<< HEAD
package com.ttl.customersocialapp;
import android.app.Dialog;
import android.app.Fragment;
import android.app.FragmentManager;
import android.app.FragmentTransaction;
import android.content.Context;
import android.os.Bundle;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnKeyListener;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import com.ttl.model.MaintaintanceList_StringArray;

public class MaintaintipsListFragment extends Fragment {

	String SpinerSelected;
	Spinner spinner;
	String[] taskname = { "PRECAUTION", "STEERING", "BREAKS", "BATTERY",
			"ENGINE", "TIRIES", "EXTERIOR CARE", "INTERIOR CARE",
			"TROUBLE SHOOTING", "TIPS & HYGIENE", "SAFETY", "WIPERS",
			"ELECTRICAL", "ALERTS & INDICATIONS" };
	String value;
	int arr_images[] = { R.drawable.whiteprecautions, R.drawable.whitesteering,
			R.drawable.whitebreaks, R.drawable.whitebattery,
			R.drawable.whiteengine, R.drawable.whitetiries,
			R.drawable.whiteexteriorcare, R.drawable.whiteinteriorcare,
			R.drawable.whitetroubleshooting, R.drawable.whitetipshygiene,
			R.drawable.whitesafety, R.drawable.whitewipers,
			R.drawable.whiteelectrical, R.drawable.whitealertsindications };

	View rootView;
	Fragment fragment = null;
	ListView lv, dialoglist;
	TextView dialogtitle;
	ImageView dialogimg, dialogimgclose;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {

		rootView = inflater.inflate(R.layout.fragment_maintain_list, container,
				false);

		value = getArguments().getString("CID");

		spinner = (Spinner) rootView.findViewById(R.id.spinner1);
		spinner.setAdapter(new MyAdapter(rootView.getContext(),
				R.layout.maintain_list_spinner_row, taskname));

		lv = (ListView) rootView.findViewById(R.id.listview);

		// spiner selected defalut set option
		for (int i = 0; i < spinner.getCount(); i++) {
			if (spinner.getItemAtPosition(i).equals(value)) {
				spinner.setSelection(i);

				break;
			}
		}

		// Sipnner Click Events

		spinner.setOnItemSelectedListener(new OnItemSelectedListener() {

			@Override
			public void onItemSelected(AdapterView<?> parent, View view,
					int position, long id) {

				SpinerSelected = parent.getItemAtPosition(position).toString();
				switch (position) {
				case 0:
					set_to_adapter(MaintaintanceList_StringArray.wash);

					break;

				case 1:
					set_to_adapter(MaintaintanceList_StringArray.liquids);
					break;

				case 2:
					set_to_adapter(MaintaintanceList_StringArray.breaks);
					break;

				case 3:
					set_to_adapter(MaintaintanceList_StringArray.battary);
					break;

				case 4:
					set_to_adapter(MaintaintanceList_StringArray.engine);
					break;

				case 5:
					set_to_adapter(MaintaintanceList_StringArray.tires);
					break;
				case 6:
					set_to_adapter(MaintaintanceList_StringArray.shocks);
					break;

				case 7:
					set_to_adapter(MaintaintanceList_StringArray.ignition);
					break;

				case 8:
					set_to_adapter(MaintaintanceList_StringArray.airfilter);
					break;
				case 9:
					set_to_adapter(MaintaintanceList_StringArray.gear);
					break;
				case 10:
					set_to_adapter(MaintaintanceList_StringArray.exhaust);
					break;
				case 11:
					set_to_adapter(MaintaintanceList_StringArray.wipers);
					break;

				default:
				}

			}

			@Override
			public void onNothingSelected(AdapterView<?> parent) {
				// TODO Auto-generated method stub

			}
		});

		// Custom Dialog Box

		final Dialog dialog = new Dialog(rootView.getContext());
		dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
		dialog.setContentView(R.layout.dialog_popup);
		dialogimgclose = (ImageView) dialog.findViewById(R.id.imgclose);
		dialogtitle = (TextView) dialog.findViewById(R.id.dialogtitle);
		dialoglist = (ListView) dialog.findViewById(R.id.dialoglist);
		dialogimg = (ImageView) dialog.findViewById(R.id.dialogimg);

		// ListView Click Event

		lv.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {

				if (SpinerSelected.equals("WASH")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.darkbluewash);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.wash);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("LIQUIDS")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.engineoil);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.liquids);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("BREAKS")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.engineoil);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.breaks);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("BATTERY")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.battaryy);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.battary_info);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("ENGINE")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.engineoil);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.engine_oil);
						dialog.show();
					} else if (position == 1) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg
								.setBackgroundResource(R.drawable.enginecoolantlevel);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_coolant_level));
						set_to_dialogadapter(MaintaintanceList_StringArray.engine_coolant_level);
						dialog.show();
					} else if (position == 2) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg
								.setBackgroundResource(R.drawable.checkingbrakefluidlevel);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_coolant_level));
						set_to_dialogadapter(MaintaintanceList_StringArray.Checking_the_brake_fluid_level);
						dialog.show();
					} else if (position == 3) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg
								.setBackgroundResource(R.drawable.checkingwasherfluidlevel);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_coolant_level));
						set_to_dialogadapter(MaintaintanceList_StringArray.checking_the_washer_fluid_level);
						dialog.show();
					} else if (position == 4) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg
								.setBackgroundResource(R.drawable.powersteeringfluidone);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_coolant_level));
						set_to_dialogadapter(MaintaintanceList_StringArray.power_steering_fluid);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("TIRIES")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.engineoil);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.tires);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("SHOCKS")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.engineoil);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.shocks);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("IGNITION")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.engineoil);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.ignition);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("AIR FILTER")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.engineoil);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.airfilter);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("GEAR")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.engineoil);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.gear);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("EXHAUST")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.engineoil);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.exhaust);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("WIPERS")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.engineoil);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.wipers);
						dialog.show();
					}
				}

			}
		});

		// Close Custom Dialog Box

		dialogimgclose.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				dialog.dismiss();
			}
		});

		rootView.getRootView().setFocusableInTouchMode(true);
		rootView.getRootView().requestFocus();

		rootView.getRootView().setOnKeyListener(new OnKeyListener() {
			@Override
			public boolean onKey(View v, int keyCode, KeyEvent event) {
				if (event.getAction() == KeyEvent.ACTION_DOWN) {
					if (keyCode == KeyEvent.KEYCODE_BACK) {
						 Toast.makeText(getActivity(), "Back Pressed",
						 Toast.LENGTH_SHORT).show();
						FragmentManager fm = getFragmentManager();
						FragmentTransaction tx = fm.beginTransaction();
						tx.replace(R.id.frame_container,new MaintenanceTipsFragment()).commit();
						return true;
					}
				}
				return false;
			}
		});
		return rootView;

	}

	private void set_to_adapter(String[] arry) {

		lv.setAdapter(new ListAdapter(rootView.getContext(),
				R.layout.maintainlist_listview_row, arry));
	}

	private void set_to_dialogadapter(String[] arry) {

		dialoglist.setAdapter(new DialogAdapter(rootView.getContext(),
				R.layout.dialoglist_row, arry));
	}

	// Spinner Adapter

	public class MyAdapter extends ArrayAdapter<String> {

		public MyAdapter(Context context, int textViewResourceId,
				String[] objects) {
			super(context, textViewResourceId, objects);
		}

		@Override
		public View getDropDownView(int position, View convertView,
				ViewGroup parent) {
			return getCustomView(position, convertView, parent);
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			return getCustomView(position, convertView, parent);
		}

		public View getCustomView(int position, View convertView,
				ViewGroup parent) {

			LayoutInflater inflater = (LayoutInflater) getContext()
					.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
			// LayoutInflater inflater= getContext().getLayoutInflater();
			View row = inflater.inflate(R.layout.maintain_list_spinner_row,
					parent, false);
			TextView label = (TextView) row.findViewById(R.id.company);
			label.setText(taskname[position]);

			ImageView icon = (ImageView) row.findViewById(R.id.image);
			icon.setImageResource(arr_images[position]);
			return row;
		}
	}

	// ListView Adapter

	public class ListAdapter extends ArrayAdapter<String> {

		String[] arr;

		public ListAdapter(Context context, int resource, String[] objects) {
			super(context, resource, objects);
			arr = objects;
			// TODO Auto-generated constructor stub
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			View v = convertView;
			if (v == null) {

				LayoutInflater li = LayoutInflater.from(rootView.getContext());
				v = li.inflate(R.layout.maintainlist_listview_row, parent,
						false);
			}

			TextView t1 = (TextView) v.findViewById(R.id.txt);
			t1.setText(arr[position]);

			return v;
		}

	}

	// DialogBox ListView Adapter

	public class DialogAdapter extends ArrayAdapter<String> {
		String[] arr;

		public DialogAdapter(Context context, int resource, String[] objects) {
			super(context, resource, objects);
			arr = objects;
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			View v = convertView;
			if (v == null) {

				LayoutInflater li = LayoutInflater.from(rootView.getContext());
				v = li.inflate(R.layout.dialoglist_row, parent, false);
			}

			TextView t1 = (TextView) v.findViewById(R.id.txtinfo);
			t1.setText(arr[position]);

			return v;
		}
	}

}
=======
package com.ttl.customersocialapp;
import android.app.Dialog;
import android.app.Fragment;
import android.app.FragmentManager;
import android.app.FragmentTransaction;
import android.content.Context;
import android.os.Bundle;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnKeyListener;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import com.ttl.model.MaintaintanceList_StringArray;

public class MaintaintipsListFragment extends Fragment {

	String SpinerSelected;
	Spinner spinner;
	String[] taskname = { "PRECAUTION", "STEERING", "BREAKS", "BATTERY",
			"ENGINE", "TIRIES", "EXTERIOR CARE", "INTERIOR CARE",
			"TROUBLE SHOOTING", "TIPS & HYGIENE", "SAFETY", "WIPERS",
			"ELECTRICAL", "ALERTS & INDICATIONS" };
	String value;
	int arr_images[] = { R.drawable.whiteprecautions, R.drawable.whitesteering,
			R.drawable.whitebreaks, R.drawable.whitebattery,
			R.drawable.whiteengine, R.drawable.whitetiries,
			R.drawable.whiteexteriorcare, R.drawable.whiteinteriorcare,
			R.drawable.whitetroubleshooting, R.drawable.whitetipshygiene,
			R.drawable.whitesafety, R.drawable.whitewipers,
			R.drawable.whiteelectrical, R.drawable.whitealertsindications };

	View rootView;
	Fragment fragment = null;
	ListView lv, dialoglist;
	TextView dialogtitle;
	ImageView dialogimg, dialogimgclose;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {

		rootView = inflater.inflate(R.layout.fragment_maintain_list, container,
				false);

		value = getArguments().getString("CID");

		spinner = (Spinner) rootView.findViewById(R.id.spinner1);
		spinner.setAdapter(new MyAdapter(rootView.getContext(),
				R.layout.maintain_list_spinner_row, taskname));

		lv = (ListView) rootView.findViewById(R.id.listview);

		// spiner selected defalut set option
		for (int i = 0; i < spinner.getCount(); i++) {
			if (spinner.getItemAtPosition(i).equals(value)) {
				spinner.setSelection(i);

				break;
			}
		}

		// Sipnner Click Events

		spinner.setOnItemSelectedListener(new OnItemSelectedListener() {

			@Override
			public void onItemSelected(AdapterView<?> parent, View view,
					int position, long id) {

				SpinerSelected = parent.getItemAtPosition(position).toString();
				switch (position) {
				case 0:
					set_to_adapter(MaintaintanceList_StringArray.wash);

					break;

				case 1:
					set_to_adapter(MaintaintanceList_StringArray.liquids);
					break;

				case 2:
					set_to_adapter(MaintaintanceList_StringArray.breaks);
					break;

				case 3:
					set_to_adapter(MaintaintanceList_StringArray.battary);
					break;

				case 4:
					set_to_adapter(MaintaintanceList_StringArray.engine);
					break;

				case 5:
					set_to_adapter(MaintaintanceList_StringArray.tires);
					break;
				case 6:
					set_to_adapter(MaintaintanceList_StringArray.shocks);
					break;

				case 7:
					set_to_adapter(MaintaintanceList_StringArray.ignition);
					break;

				case 8:
					set_to_adapter(MaintaintanceList_StringArray.airfilter);
					break;
				case 9:
					set_to_adapter(MaintaintanceList_StringArray.gear);
					break;
				case 10:
					set_to_adapter(MaintaintanceList_StringArray.exhaust);
					break;
				case 11:
					set_to_adapter(MaintaintanceList_StringArray.wipers);
					break;

				default:
				}

			}

			@Override
			public void onNothingSelected(AdapterView<?> parent) {
				// TODO Auto-generated method stub

			}
		});

		// Custom Dialog Box

		final Dialog dialog = new Dialog(rootView.getContext());
		dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
		dialog.setContentView(R.layout.dialog_popup);
		dialogimgclose = (ImageView) dialog.findViewById(R.id.imgclose);
		dialogtitle = (TextView) dialog.findViewById(R.id.dialogtitle);
		dialoglist = (ListView) dialog.findViewById(R.id.dialoglist);
		dialogimg = (ImageView) dialog.findViewById(R.id.dialogimg);

		// ListView Click Event

		lv.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {

				if (SpinerSelected.equals("WASH")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.darkbluewash);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.wash);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("LIQUIDS")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.engineoil);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.liquids);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("BREAKS")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.engineoil);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.breaks);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("BATTERY")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.battaryy);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.battary_info);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("ENGINE")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.engineoil);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.engine_oil);
						dialog.show();
					} else if (position == 1) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg
								.setBackgroundResource(R.drawable.enginecoolantlevel);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_coolant_level));
						set_to_dialogadapter(MaintaintanceList_StringArray.engine_coolant_level);
						dialog.show();
					} else if (position == 2) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg
								.setBackgroundResource(R.drawable.checkingbrakefluidlevel);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_coolant_level));
						set_to_dialogadapter(MaintaintanceList_StringArray.Checking_the_brake_fluid_level);
						dialog.show();
					} else if (position == 3) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg
								.setBackgroundResource(R.drawable.checkingwasherfluidlevel);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_coolant_level));
						set_to_dialogadapter(MaintaintanceList_StringArray.checking_the_washer_fluid_level);
						dialog.show();
					} else if (position == 4) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg
								.setBackgroundResource(R.drawable.powersteeringfluidone);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_coolant_level));
						set_to_dialogadapter(MaintaintanceList_StringArray.power_steering_fluid);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("TIRIES")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.engineoil);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.tires);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("SHOCKS")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.engineoil);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.shocks);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("IGNITION")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.engineoil);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.ignition);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("AIR FILTER")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.engineoil);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.airfilter);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("GEAR")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.engineoil);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.gear);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("EXHAUST")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.engineoil);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.exhaust);
						dialog.show();
					}
				}

				if (SpinerSelected.equals("WIPERS")) {
					if (position == 0) {
						dialogtitle.setText(parent.getItemAtPosition(position)
								.toString());
						dialogimg.setBackgroundResource(R.drawable.engineoil);
						// dialoglist.setAdapter(new
						// DialogAdapter(rootView.getContext(),
						// R.layout.dialoglist_row,
						// MaintaintanceList_StringArray.engine_oil));
						set_to_dialogadapter(MaintaintanceList_StringArray.wipers);
						dialog.show();
					}
				}

			}
		});

		// Close Custom Dialog Box

		dialogimgclose.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				dialog.dismiss();
			}
		});

		rootView.getRootView().setFocusableInTouchMode(true);
		rootView.getRootView().requestFocus();

		rootView.getRootView().setOnKeyListener(new OnKeyListener() {
			@Override
			public boolean onKey(View v, int keyCode, KeyEvent event) {
				if (event.getAction() == KeyEvent.ACTION_DOWN) {
					if (keyCode == KeyEvent.KEYCODE_BACK) {
						 Toast.makeText(getActivity(), "Back Pressed",
						 Toast.LENGTH_SHORT).show();
						FragmentManager fm = getFragmentManager();
						FragmentTransaction tx = fm.beginTransaction();
						tx.replace(R.id.frame_container,new MaintenanceTipsFragment()).commit();
						return true;
					}
				}
				return false;
			}
		});
		return rootView;

	}

	private void set_to_adapter(String[] arry) {

		lv.setAdapter(new ListAdapter(rootView.getContext(),
				R.layout.maintainlist_listview_row, arry));
	}

	private void set_to_dialogadapter(String[] arry) {

		dialoglist.setAdapter(new DialogAdapter(rootView.getContext(),
				R.layout.dialoglist_row, arry));
	}

	// Spinner Adapter

	public class MyAdapter extends ArrayAdapter<String> {

		public MyAdapter(Context context, int textViewResourceId,
				String[] objects) {
			super(context, textViewResourceId, objects);
		}

		@Override
		public View getDropDownView(int position, View convertView,
				ViewGroup parent) {
			return getCustomView(position, convertView, parent);
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			return getCustomView(position, convertView, parent);
		}

		public View getCustomView(int position, View convertView,
				ViewGroup parent) {

			LayoutInflater inflater = (LayoutInflater) getContext()
					.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
			// LayoutInflater inflater= getContext().getLayoutInflater();
			View row = inflater.inflate(R.layout.maintain_list_spinner_row,
					parent, false);
			TextView label = (TextView) row.findViewById(R.id.company);
			label.setText(taskname[position]);

			ImageView icon = (ImageView) row.findViewById(R.id.image);
			icon.setImageResource(arr_images[position]);
			return row;
		}
	}

	// ListView Adapter

	public class ListAdapter extends ArrayAdapter<String> {

		String[] arr;

		public ListAdapter(Context context, int resource, String[] objects) {
			super(context, resource, objects);
			arr = objects;
			// TODO Auto-generated constructor stub
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			View v = convertView;
			if (v == null) {

				LayoutInflater li = LayoutInflater.from(rootView.getContext());
				v = li.inflate(R.layout.maintainlist_listview_row, parent,
						false);
			}

			TextView t1 = (TextView) v.findViewById(R.id.txt);
			t1.setText(arr[position]);

			return v;
		}

	}

	// DialogBox ListView Adapter

	public class DialogAdapter extends ArrayAdapter<String> {
		String[] arr;

		public DialogAdapter(Context context, int resource, String[] objects) {
			super(context, resource, objects);
			arr = objects;
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			View v = convertView;
			if (v == null) {

				LayoutInflater li = LayoutInflater.from(rootView.getContext());
				v = li.inflate(R.layout.dialoglist_row, parent, false);
			}

			TextView t1 = (TextView) v.findViewById(R.id.txtinfo);
			t1.setText(arr[position]);

			return v;
		}
	}

}
>>>>>>> TMSC QA 3.4V
