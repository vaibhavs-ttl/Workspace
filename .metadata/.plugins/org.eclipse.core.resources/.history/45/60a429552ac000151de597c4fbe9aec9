package com.ttl.customersocialapp;

import java.util.ArrayList;
import java.util.List;

import com.ttl.adapter.CustomAdapter;
import com.ttl.adapter.ResponseCallback;
import com.ttl.model.ComplaintAndJCDescripti;
import com.ttl.model.ServiceHistory;
import com.ttl.model.UserDetails;
import com.ttl.webservice.Constants;
import com.ttl.webservice.WebServiceCall;

import android.app.FragmentManager;
import android.app.FragmentTransaction;
import android.app.ListFragment;
import android.os.Bundle;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnKeyListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.Spinner;
import android.widget.Toast;

public class ServiceHistoyFragment extends ListFragment {

	private ArrayList<ServiceHistory> lst_history ;//= new ArrayList<ServiceHistory>();
	Spinner spinner_chassis;
	ArrayList<ComplaintAndJCDescripti>lst_complaintJC;
	
	ArrayList<ArrayList<ComplaintAndJCDescripti>> lst_lst_complaintJC = new ArrayList<ArrayList<ComplaintAndJCDescripti>>();
	
	CustomAdapter ad;
	List<String> chassisvalues = new ArrayList<String>();

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		View v = inflater.inflate(R.layout.fragment_servicehistory, container, false);
		spinner_chassis = (Spinner) v.findViewById(R.id.spinner_chassis);
		chassisvalues.add("Registration Number - Chassis Number");
		int size = new UserDetails().getRegNumberList().size();
	       for(int i = 0 ; i<size; i++)
	       {
	    	   chassisvalues.add(new UserDetails().getRegNumberList().get(i).get("registration_num")+" - "+new UserDetails().getRegNumberList().get(i).get("chassis_num"));
	       }
		 ArrayAdapter<String> regno = new ArrayAdapter<String>(getActivity(),android.R.layout.simple_spinner_item, chassisvalues);
	       regno.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
	       spinner_chassis.setAdapter(regno);
		spinner_chassis.setOnItemSelectedListener(new OnItemSelectedListener() {

			@Override
			public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
				// TODO Auto-generated method stub
				
				if(position!=0){
				String[] regchassis = spinner_chassis.getSelectedItem().toString().split("-");	
				String regNo = regchassis[0].trim();
					
				String req =	"<SOAP:Envelope xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\">"
					  +"<SOAP:Body>"
					  +"<GetServiceHistoryByChassis_CSB xmlns=\"src.com.CSB\" preserveSpace=\"no\" qAccess=\"0\" qValues=\"\">"
					      +"<RegistrationNumber>WB70C5835</RegistrationNumber>" //"+regNo+"
					      +"<chassis_no></chassis_no>"
					    +"</GetServiceHistoryByChassis_CSB>"
					  +"</SOAP:Body>"
					+"</SOAP:Envelope>";
//					String req ="<SOAP:Envelope xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\">"
//					  +"<SOAP:Body>"
//					  +"<GetServiceHistoryByChassis_CSB xmlns=\"src.com.CSB\" preserveSpace=\"no\" qAccess=\"0\" qValues=\"\">"
//					      +"<chassis_no>"+spinner_chassis.getSelectedItem().toString()+"</chassis_no>"
//					    +"</GetServiceHistoryByChassis_CSB>"
//					  +"</SOAP:Body>"
//					+"</SOAP:Envelope>";	
					

						new WebServiceCall(getActivity(), req, Constants.GetServiceHistoryByChassis_CSB, new ResponseCallback() {
							
							@Override
							public void onResponseReceive(Object object) {
								// TODO Auto-generated method stub
								lst_history = (ArrayList<ServiceHistory>) object;
								
//								for ( int i = 0; i < lst_history.size(); i++) {
//                                getComplaintAndJC(lst_history.get(i).CHASSIS_NO,lst_history.get(i).SR_HISTORY_NUM);
//								}
							//	getListView().invalidateViews();
								//getListView().setEnabled(false);
							//	getListView().setOnScrollListener(null);
								CustomAdapter ad = new CustomAdapter(getActivity(), lst_history,getResources());
								getListView().setAdapter(ad); 
								
							}
							
							

							@Override
							public void onErrorReceive(String string) {
								// TODO Auto-generated method stub
								Toast.makeText(getActivity(), string, Toast.LENGTH_SHORT).show();
							}
						},"Getting Service History.").execute();
						
			}
			}
			@Override
			public void onNothingSelected(AdapterView<?> parent) {
				// TODO Auto-generated method stub
				
			}
			
//			private ArrayList<ArrayList<ComplaintAndJCDescripti>> getComplaintAndJC(String cHASSIS_NO, String sR_HISTORY_NUM) {
//				// TODO Auto-generated method stub
//				//for ( int i = 0; i < lst_history.size(); i++) {
//				//	Log.i("lst_history", lst_history.get(i).SERVICE_AT_DEALER + " " + lst_history.get(i).SR_TYPE);
//				
//					String req1 = "<SOAP:Envelope xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\">"
//							+"<SOAP:Body>"
//							+"<GetComplaintAndJCDescripti_CSB xmlns=\"src.com.CSB\" preserveSpace=\"no\" qAccess=\"0\" qValues=\"\">"
//					      +"<chassis_no>"+cHASSIS_NO+"</chassis_no>"
//					      +"<shrecordno>"+sR_HISTORY_NUM+"</shrecordno>"
//					    +"</GetComplaintAndJCDescripti_CSB>"
//					  +"</SOAP:Body>"
//					+"</SOAP:Envelope>";
//	             new WebServiceCall(getActivity(), req1, Constants.GetComplaintAndJCDescripti_CSB, new ResponseCallback() {
//
//						@Override
//						public void onResponseReceive(Object object) {
//							// TODO Auto-generated method stub
//							lst_complaintJC = (ArrayList<ComplaintAndJCDescripti>) object;
//							lst_lst_complaintJC.add(lst_complaintJC);
//							
//							if(lst_lst_complaintJC.size()==lst_history.size()){
//								for (int j = 0; j < lst_lst_complaintJC.size(); j++) {
//									for (int i = 0; i < lst_lst_complaintJC.get(j).size(); i++) {
//										Log.i("ITEMS", "AT " + j + " " + i+" "+ lst_lst_complaintJC.get(j).get(i).RECORD_TYPE+" "+lst_lst_complaintJC.get(j).get(i).C_J_P_DESCRTPTION+" "+lst_lst_complaintJC.get(j).get(i).C_J_P_STATUS+"");
//									}
//									
//								}
//							
//							 ad = new CustomAdapter(getActivity(), lst_history,lst_lst_complaintJC,getResources());
//							 if(getListView().getAdapter() == null){ //Adapter not set yet.
//							     setListAdapter(ad);
//							    }
//							    else{ //Already has an adapter
//							    ad.notifyDataSetChanged();
//							    }
//							 
//							
//							getListView().invalidateViews();
//						
//						//	ad.notifyDataSetInvalidated();
//							}
//						}
//
//						@Override 
//						public void onErrorReceive(String string) {
//							// TODO Auto-generated method stub
//							Toast.makeText(getActivity(), string, Toast.LENGTH_SHORT).show();
//						}
//						
//					},"Getting JOB CARD Description..").execute();
//	             	
//	             return lst_lst_complaintJC;
//			}
		});
		
		v.getRootView().setFocusableInTouchMode(true);
		v.getRootView().requestFocus();

		v.getRootView().setOnKeyListener(new OnKeyListener() {
			@Override
			public boolean onKey(View v, int keyCode, KeyEvent event) {
				if (event.getAction() == KeyEvent.ACTION_DOWN) {
					if (keyCode == KeyEvent.KEYCODE_BACK) {						
						FragmentManager fm = getFragmentManager();
						FragmentTransaction tx = fm.beginTransaction();
						tx.replace(R.id.frame_container, new HomeFragment())
								.commit();
						return true;
					}
				}
				return false;
			}
		});
		
		return v;
	}
	
	}
