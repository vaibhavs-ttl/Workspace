<<<<<<< HEAD
package com.ttl.helper;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Random;

import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;

import com.ttl.adapter.AwsResponseCallback;
import com.ttl.adapter.ResponseCallback;
import com.ttl.communication.SamlArtifact;
import com.ttl.customersocialapp.HomeFragment;
import com.ttl.customersocialapp.R;
import com.ttl.customersocialapp.VehicleDetails_Fragment;
import com.ttl.model.ServiceBookingUser;
import com.ttl.model.ServiceHandler;
import com.ttl.model.UserDetails;
import com.ttl.webservice.AWS_WebServiceCall;
import com.ttl.webservice.Config;
import com.ttl.webservice.Constants;
import com.ttl.webservice.WebServiceCall;

import android.app.Activity;
import android.app.Dialog;
import android.app.Fragment;
import android.app.FragmentManager;
import android.content.Context;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

public class VehicleRegister {

	Activity context;
	Dialog proceeddialog , vehiclenodialog ,mobilenumberdialog ,contactdealerdialog , otpdialog ;
	 EditText regnumber ,chassis;
	 Button proceed , notnow;
	public VehicleRegister(Activity context)
	{
		this.context = context;
		register();
	}
	
	public void register()
	
	{
		proceeddialog = new Dialog(context);
		proceeddialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
		proceeddialog.setContentView(R.layout.vehicle_reg_popup);
		proceeddialog.setCancelable(false);
		proceeddialog.show();
		proceed = (Button) proceeddialog.findViewById(R.id.btnproceed);
		notnow = (Button) proceeddialog.findViewById(R.id.btnnotnow);
		notnow.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				proceeddialog.dismiss();
			}
		});
		proceed.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				proceeddialog.dismiss();
				
			
		 vehiclenodialog = new Dialog(context);
		 vehiclenodialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
		 vehiclenodialog.setContentView(R.layout.vehicle_vari_regno_popup);
		 vehiclenodialog.setCancelable(false);
		 vehiclenodialog.show();
		 ImageView close = (ImageView) vehiclenodialog.findViewById(R.id.imgclose);
		 close.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				vehiclenodialog.dismiss();
				HomeFragment.regvehicle = false;
				//checkvehiclereg(HomeFragment.regvehicle);
			}
		});
		 Button submit = (Button) vehiclenodialog.findViewById(R.id.btnsubmit);
		 regnumber = (EditText) vehiclenodialog.findViewById(R.id.txtregnum);
		 chassis = (EditText) vehiclenodialog.findViewById(R.id.txtchassisnum);
		submit.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				if(Config.getSAMLARTIFACT().equals(""))
				{
					new SamlArtifact(context).execute();
				}
				vehiclenodialog.dismiss();
				String _url = context.getResources()
						.getString(R.string.URL)
						+ Config.getSAMLARTIFACT();
						String req = "<SOAP:Envelope xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\">"
								+ "<SOAP:Body>"
								+ "<GetCustomerVehicleDetailsCSB xmlns=\"src.com.CSB\" preserveSpace=\"no\" qAccess=\"0\" qValues=\"\">"
								+ "<RegistrationNumber>"+regnumber.getText().toString()+"</RegistrationNumber>"
								+ "<ChassisNumber>"+chassis.getText().toString()+"</ChassisNumber>" + "<MobileNo></MobileNo>"
								+ "</GetCustomerVehicleDetailsCSB>" + "</SOAP:Body>" + "</SOAP:Envelope>";

						new WebServiceCall(context, req, Constants.GetCustomerVehicleDetailsCSB, new ResponseCallback() {

							@Override
							public void onResponseReceive(Object object) {
								
							
								final ServiceBookingUser user = (ServiceBookingUser) object;
								if(!(user.getPhoneno().equals("")))
								{
									
									mobilenumberdialog = new Dialog(context);
									mobilenumberdialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
									mobilenumberdialog.setContentView(R.layout.vehicle_vari_mobno);
									mobilenumberdialog.setCancelable(false);
									mobilenumberdialog.show();
									
									 ImageView close = (ImageView) mobilenumberdialog.findViewById(R.id.imgclose);
									 close.setOnClickListener(new OnClickListener() {
										
										@Override
										public void onClick(View v) {
											// TODO Auto-generated method stub
											mobilenumberdialog.dismiss();
											HomeFragment.regvehicle = false;
											//checkvehiclereg(HomeFragment.regvehicle);
										}
									});
									
									TextView reg = (TextView) mobilenumberdialog.findViewById(R.id.txtregno);
									String regnumber = "(Reg.No: "+user.getREGISTRATIONNUMBER()+")";
									reg.setText(regnumber);
									String mob = "(********"+user.getPhoneno().toString().substring(user.getPhoneno().length()-3)+") to proceed";
									TextView mobtext = (TextView) mobilenumberdialog.findViewById(R.id.txtmoilenumber);
									mobtext.setText(mob);
									
									final EditText mobile = (EditText) mobilenumberdialog.findViewById(R.id.edtmobileno);
									Button submitmob = (Button) mobilenumberdialog.findViewById(R.id.btnsubmit);
									submitmob.setOnClickListener(new OnClickListener() {
										
										@Override
										public void onClick(View v) {
											// TODO Auto-generated method stub
											String enteredmob = mobile.getText().toString();
											Log.d("Here", user.getPhoneno());
											if(enteredmob.equals(user.getPhoneno().toString()))
											{
												Log.d("Here", user.getPhoneno());
												otpGeneration(user);
												

											}else
											{
												Toast.makeText(context, "You have entered wrong number.Please re-enter.", Toast.LENGTH_SHORT).show();

											}
										}
									});
								}else
								{
									
								}
							}

							@Override
							public void onErrorReceive(String string) {
								
								Toast.makeText(context, "Number you have enetred is not match with our record. Please verify number with nearest Tata Dealer", Toast.LENGTH_SHORT).show();
							}

						
						},"Populating Data..").execute();  
			}
		}) ;
		
			}
		});
	}
	public void otpGeneration(final ServiceBookingUser user)
	{
		String _url = context.getResources()
				.getString(R.string.URL)
				+ Config.getSAMLARTIFACT();
		final int otp = gen();
		String otpmessage = "To register your vehicle "+user.getREGISTRATIONNUMBER().toString()+" in Tata Motors customer service mobile app please use One Time Password(OTP). NEVER SHARE THE OTP WITH ANYONE. TATA MOTORS NEVER CALLS TO VERIFY IT. The OTP is "+otp+".";
		String req = "<SOAP:Envelope xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\">"
				+"<SOAP:Body>"
				+"<bpmSendSMS xmlns=\"http://schemas.cordys.com/default\">"
/*				+"<PHNUMBER>9561816990</PHNUMBER>" 				
*/			  +"<PHNUMBER>"+user.getPhoneno().toString()+"</PHNUMBER>"
				+"<MESSAGETEXT>"+otpmessage+"</MESSAGETEXT>"
				+"<RULENAME>Customer App OTP</RULENAME>"
				+"</bpmSendSMS>"
				+"</SOAP:Body></SOAP:Envelope>";
		new WebServiceCall(context, req, Constants.bpmSendSMS, new ResponseCallback() {
			
			@Override
			public void onResponseReceive(Object object) {
				// TODO Auto-generated method stub
				boolean otpsent = (boolean) object;
				
				if(otpsent)
				{
					mobilenumberdialog.dismiss();
					otpdialog = new Dialog(context);
					otpdialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
					otpdialog.setContentView(R.layout.vehicle_vari_otpno);
					otpdialog.setCancelable(false);
					otpdialog.show();
					
					 ImageView close = (ImageView) otpdialog.findViewById(R.id.imgclose);
					 close.setOnClickListener(new OnClickListener() {
						
						@Override
						public void onClick(View v) {
							// TODO Auto-generated method stub
							otpdialog.dismiss();
							HomeFragment.regvehicle = false;
						//	checkvehiclereg(HomeFragment.regvehicle);
						}
					});
					
					TextView regnum = (TextView) otpdialog.findViewById(R.id.txtregno);
					String regnumber = "(Reg.No: "+user.getREGISTRATIONNUMBER()+")";
					regnum.setText(regnumber);
					String mob = "Mobile Number (*******"+user.getPhoneno().toString().substring(user.getPhoneno().length()-3)+")";
					TextView mobtext = (TextView) otpdialog.findViewById(R.id.custmobnum);
					mobtext.setText(mob);
					final EditText otptext = (EditText) otpdialog.findViewById(R.id.edtotpno);
					
					final String enteredotp = otptext.getText().toString();
					Button verifyotp = (Button) otpdialog.findViewById(R.id.btnsubmit);
					verifyotp.setOnClickListener(new OnClickListener() {
						
						@Override
						public void onClick(View v) {
							// TODO Auto-generated method stub
							String otpstring = ""+otp;
							 String enteredotp = otptext.getText().toString();
								Log.d("otp", otpstring+""+enteredotp);

							if(enteredotp.toString().equals(otpstring))
							{
							otpdialog.dismiss();
							HomeFragment.regvehicle = true;
							//checkvehiclereg(HomeFragment.regvehicle);
							//Toast.makeText(context, "Vehicle registered successfully.", Toast.LENGTH_SHORT).show();
							HomeFragment.regvehicle = true;
							registerVehicle(user);
							}else
							{
								Toast.makeText(context, "OTP not matching please re-enter.", Toast.LENGTH_SHORT).show();
								HomeFragment.regvehicle = false;
								//checkvehiclereg(HomeFragment.regvehicle);
							}
						}
					});
					Button resend = (Button) otpdialog.findViewById(R.id.btnresend);
					resend.setOnClickListener(new OnClickListener() {
						
						@Override
						public void onClick(View v) {
							// TODO Auto-generated method stub
							otpGeneration(user);
						}
					});
				}
			}
			
			@Override
			public void onErrorReceive(String string) {
				// TODO Auto-generated method stub
				
			}
		}, "").execute();
	}
	private int gen() {
		 Random r = new Random( System.currentTimeMillis() );
		    return (1 + r.nextInt(2)) * 10000 + r.nextInt(10000);
	}
	
	public void registerVehicle(ServiceBookingUser user) {
		String req = "http://tmlmobilityservices.co.in:8080/CustomerApp_Restws/customerapp/vehicleServices/insertVehicleDetails";
		List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(3);
		nameValuePairs.add(new BasicNameValuePair("chassis_num", user
				.getCHASSISNUMBER()));
		nameValuePairs.add(new BasicNameValuePair("registration_num", user
				.getREGISTRATIONNUMBER()));
		nameValuePairs.add(new BasicNameValuePair("user_id", UserDetails
				.getUser_id()));
		new AWS_WebServiceCall(context, req, ServiceHandler.POST,
				Constants.insertVehicleDetails, nameValuePairs,
				new AwsResponseCallback() {

					@Override
					public void onResponseReceive(Object object) {
						// TODO Auto-generated method stub
						boolean res = (boolean) object;
						if (res) {

							getVehicles();

						} else {
							Toast.makeText(context, "unsuccessful",
									Toast.LENGTH_LONG).show();
						}

					}

					@Override
					public void onErrorReceive(String string) {
						// TODO Auto-generated method stub
						Toast.makeText(
								context,
								"Invalid credentials, please check username passsword you entered.",
								Toast.LENGTH_LONG).show();
						// edtuser_id.setFocusable(true);
					}

				}).execute();

	}
	
	public void getVehicles() {
		String req = "http://tmlmobilityservices.co.in:8080/CustomerApp_Restws/customerapp/vehicleServices/getVehicleDetailsByUserId/"
				+ UserDetails.getUser_id();
		new AWS_WebServiceCall(context, req, ServiceHandler.GET,
				Constants.getVehicleDetailsByUserId, new AwsResponseCallback() {

					@Override
					public void onResponseReceive(Object object) {
						// TODO Auto-generated method stub

						new UserDetails()
								.setRegNumberList((ArrayList<HashMap<String, String>>) object);
						HomeFragment.regvehicle = true;
						FragmentManager fragmentManager = getFragmentManager();
						Fragment fragment = new VehicleDetails_Fragment();
						fragmentManager.beginTransaction()
								.replace(R.id.frame_container, fragment).commit();
					//	checkvehiclereg(regvehicle);

					}

					@Override
					public void onErrorReceive(String string) {
						// TODO Auto-generated method stub
						// Toast.makeText(getActivity(), "Vehicle not re",
						// Toast.LENGTH_LONG).show();
						// edtuser_id.setFocusable(true);
						HomeFragment.regvehicle = false;
						//checkvehiclereg(regvehicle);

					}

				}).execute();
	}

}
=======
package com.ttl.helper;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Random;

import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;

import com.ttl.adapter.AwsResponseCallback;
import com.ttl.adapter.ResponseCallback;
import com.ttl.communication.SamlArtifact;
import com.ttl.customersocialapp.HomeFragment;
import com.ttl.customersocialapp.R;
import com.ttl.customersocialapp.VehicleDetails_Fragment;
import com.ttl.model.ServiceBookingUser;
import com.ttl.model.ServiceHandler;
import com.ttl.model.UserDetails;
import com.ttl.webservice.AWS_WebServiceCall;
import com.ttl.webservice.Config;
import com.ttl.webservice.Constants;
import com.ttl.webservice.WebServiceCall;

import android.app.Activity;
import android.app.Dialog;
import android.app.Fragment;
import android.app.FragmentManager;
import android.content.Context;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

public class VehicleRegister {

	Activity context;
	Dialog proceeddialog , vehiclenodialog ,mobilenumberdialog ,contactdealerdialog , otpdialog ;
	 EditText regnumber ,chassis;
	 Button proceed , notnow;
	public VehicleRegister(Activity context)
	{
		this.context = context;
		register();
	}
	
	public void register()
	
	{
		proceeddialog = new Dialog(context);
		proceeddialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
		proceeddialog.setContentView(R.layout.vehicle_reg_popup);
		proceeddialog.setCancelable(false);
		proceeddialog.show();
		proceed = (Button) proceeddialog.findViewById(R.id.btnproceed);
		notnow = (Button) proceeddialog.findViewById(R.id.btnnotnow);
		notnow.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				proceeddialog.dismiss();
			}
		});
		proceed.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				proceeddialog.dismiss();
				
			
		 vehiclenodialog = new Dialog(context);
		 vehiclenodialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
		 vehiclenodialog.setContentView(R.layout.vehicle_vari_regno_popup);
		 vehiclenodialog.setCancelable(false);
		 vehiclenodialog.show();
		 ImageView close = (ImageView) vehiclenodialog.findViewById(R.id.imgclose);
		 close.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				vehiclenodialog.dismiss();
				HomeFragment.regvehicle = false;
				//checkvehiclereg(HomeFragment.regvehicle);
			}
		});
		 Button submit = (Button) vehiclenodialog.findViewById(R.id.btnsubmit);
		 regnumber = (EditText) vehiclenodialog.findViewById(R.id.txtregnum);
		 chassis = (EditText) vehiclenodialog.findViewById(R.id.txtchassisnum);
		submit.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				if(Config.getSAMLARTIFACT().equals(""))
				{
					new SamlArtifact(context).execute();
				}
				vehiclenodialog.dismiss();
				String _url = context.getResources()
						.getString(R.string.URL)
						+ Config.getSAMLARTIFACT();
						String req = "<SOAP:Envelope xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\">"
								+ "<SOAP:Body>"
								+ "<GetCustomerVehicleDetailsCSB xmlns=\"src.com.CSB\" preserveSpace=\"no\" qAccess=\"0\" qValues=\"\">"
								+ "<RegistrationNumber>"+regnumber.getText().toString()+"</RegistrationNumber>"
								+ "<ChassisNumber>"+chassis.getText().toString()+"</ChassisNumber>" + "<MobileNo></MobileNo>"
								+ "</GetCustomerVehicleDetailsCSB>" + "</SOAP:Body>" + "</SOAP:Envelope>";

						new WebServiceCall(context, req, Constants.GetCustomerVehicleDetailsCSB, new ResponseCallback() {

							@Override
							public void onResponseReceive(Object object) {
								
							
								final ServiceBookingUser user = (ServiceBookingUser) object;
								if(!(user.getPhoneno().equals("")))
								{
									
									mobilenumberdialog = new Dialog(context);
									mobilenumberdialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
									mobilenumberdialog.setContentView(R.layout.vehicle_vari_mobno);
									mobilenumberdialog.setCancelable(false);
									mobilenumberdialog.show();
									
									 ImageView close = (ImageView) mobilenumberdialog.findViewById(R.id.imgclose);
									 close.setOnClickListener(new OnClickListener() {
										
										@Override
										public void onClick(View v) {
											// TODO Auto-generated method stub
											mobilenumberdialog.dismiss();
											HomeFragment.regvehicle = false;
											//checkvehiclereg(HomeFragment.regvehicle);
										}
									});
									
									TextView reg = (TextView) mobilenumberdialog.findViewById(R.id.txtregno);
									String regnumber = "(Reg.No: "+user.getREGISTRATIONNUMBER()+")";
									reg.setText(regnumber);
									String mob = "(********"+user.getPhoneno().toString().substring(user.getPhoneno().length()-3)+") to proceed";
									TextView mobtext = (TextView) mobilenumberdialog.findViewById(R.id.txtmoilenumber);
									mobtext.setText(mob);
									
									final EditText mobile = (EditText) mobilenumberdialog.findViewById(R.id.edtmobileno);
									Button submitmob = (Button) mobilenumberdialog.findViewById(R.id.btnsubmit);
									submitmob.setOnClickListener(new OnClickListener() {
										
										@Override
										public void onClick(View v) {
											// TODO Auto-generated method stub
											String enteredmob = mobile.getText().toString();
											Log.d("Here", user.getPhoneno());
											if(enteredmob.equals(user.getPhoneno().toString()))
											{
												Log.d("Here", user.getPhoneno());
												otpGeneration(user);
												

											}else
											{
												Toast.makeText(context, "You have entered wrong number.Please re-enter.", Toast.LENGTH_SHORT).show();

											}
										}
									});
								}else
								{
									
								}
							}

							@Override
							public void onErrorReceive(String string) {
								
								Toast.makeText(context, "Number you have enetred is not match with our record. Please verify number with nearest Tata Dealer", Toast.LENGTH_SHORT).show();
							}

						
						},"Populating Data..").execute();  
			}
		}) ;
		
			}
		});
	}
	public void otpGeneration(final ServiceBookingUser user)
	{
		String _url = context.getResources()
				.getString(R.string.URL)
				+ Config.getSAMLARTIFACT();
		final int otp = gen();
		String otpmessage = "To register your vehicle "+user.getREGISTRATIONNUMBER().toString()+" in Tata Motors customer service mobile app please use One Time Password(OTP). NEVER SHARE THE OTP WITH ANYONE. TATA MOTORS NEVER CALLS TO VERIFY IT. The OTP is "+otp+".";
		String req = "<SOAP:Envelope xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\">"
				+"<SOAP:Body>"
				+"<bpmSendSMS xmlns=\"http://schemas.cordys.com/default\">"
/*				+"<PHNUMBER>9561816990</PHNUMBER>" 				
*/			  +"<PHNUMBER>"+user.getPhoneno().toString()+"</PHNUMBER>"
				+"<MESSAGETEXT>"+otpmessage+"</MESSAGETEXT>"
				+"<RULENAME>Customer App OTP</RULENAME>"
				+"</bpmSendSMS>"
				+"</SOAP:Body></SOAP:Envelope>";
		new WebServiceCall(context, req, Constants.bpmSendSMS, new ResponseCallback() {
			
			@Override
			public void onResponseReceive(Object object) {
				// TODO Auto-generated method stub
				boolean otpsent = (boolean) object;
				
				if(otpsent)
				{
					mobilenumberdialog.dismiss();
					otpdialog = new Dialog(context);
					otpdialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
					otpdialog.setContentView(R.layout.vehicle_vari_otpno);
					otpdialog.setCancelable(false);
					otpdialog.show();
					
					 ImageView close = (ImageView) otpdialog.findViewById(R.id.imgclose);
					 close.setOnClickListener(new OnClickListener() {
						
						@Override
						public void onClick(View v) {
							// TODO Auto-generated method stub
							otpdialog.dismiss();
							HomeFragment.regvehicle = false;
						//	checkvehiclereg(HomeFragment.regvehicle);
						}
					});
					
					TextView regnum = (TextView) otpdialog.findViewById(R.id.txtregno);
					String regnumber = "(Reg.No: "+user.getREGISTRATIONNUMBER()+")";
					regnum.setText(regnumber);
					String mob = "Mobile Number (*******"+user.getPhoneno().toString().substring(user.getPhoneno().length()-3)+")";
					TextView mobtext = (TextView) otpdialog.findViewById(R.id.custmobnum);
					mobtext.setText(mob);
					final EditText otptext = (EditText) otpdialog.findViewById(R.id.edtotpno);
					
					final String enteredotp = otptext.getText().toString();
					Button verifyotp = (Button) otpdialog.findViewById(R.id.btnsubmit);
					verifyotp.setOnClickListener(new OnClickListener() {
						
						@Override
						public void onClick(View v) {
							// TODO Auto-generated method stub
							String otpstring = ""+otp;
							 String enteredotp = otptext.getText().toString();
								Log.d("otp", otpstring+""+enteredotp);

							if(enteredotp.toString().equals(otpstring))
							{
							otpdialog.dismiss();
							HomeFragment.regvehicle = true;
							//checkvehiclereg(HomeFragment.regvehicle);
							//Toast.makeText(context, "Vehicle registered successfully.", Toast.LENGTH_SHORT).show();
							HomeFragment.regvehicle = true;
							registerVehicle(user);
							}else
							{
								Toast.makeText(context, "OTP not matching please re-enter.", Toast.LENGTH_SHORT).show();
								HomeFragment.regvehicle = false;
								//checkvehiclereg(HomeFragment.regvehicle);
							}
						}
					});
					Button resend = (Button) otpdialog.findViewById(R.id.btnresend);
					resend.setOnClickListener(new OnClickListener() {
						
						@Override
						public void onClick(View v) {
							// TODO Auto-generated method stub
							otpGeneration(user);
						}
					});
				}
			}
			
			@Override
			public void onErrorReceive(String string) {
				// TODO Auto-generated method stub
				
			}
		}, "").execute();
	}
	private int gen() {
		 Random r = new Random( System.currentTimeMillis() );
		    return (1 + r.nextInt(2)) * 10000 + r.nextInt(10000);
	}
	
	public void registerVehicle(ServiceBookingUser user) {
		String req = "http://tmlmobilityservices.co.in:8080/CustomerApp_Restws/customerapp/vehicleServices/insertVehicleDetails";
		List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(3);
		nameValuePairs.add(new BasicNameValuePair("chassis_num", user
				.getCHASSISNUMBER()));
		nameValuePairs.add(new BasicNameValuePair("registration_num", user
				.getREGISTRATIONNUMBER()));
		nameValuePairs.add(new BasicNameValuePair("user_id", UserDetails
				.getUser_id()));
		new AWS_WebServiceCall(context, req, ServiceHandler.POST,
				Constants.insertVehicleDetails, nameValuePairs,
				new AwsResponseCallback() {

					@Override
					public void onResponseReceive(Object object) {
						// TODO Auto-generated method stub
						boolean res = (boolean) object;
						if (res) {

							getVehicles();

						} else {
							Toast.makeText(context, "unsuccessful",
									Toast.LENGTH_LONG).show();
						}

					}

					@Override
					public void onErrorReceive(String string) {
						// TODO Auto-generated method stub
						Toast.makeText(
								context,
								"Invalid credentials, please check username passsword you entered.",
								Toast.LENGTH_LONG).show();
						// edtuser_id.setFocusable(true);
					}

				}).execute();

	}
	
	public void getVehicles() {
		String req = "http://tmlmobilityservices.co.in:8080/CustomerApp_Restws/customerapp/vehicleServices/getVehicleDetailsByUserId/"
				+ UserDetails.getUser_id();
		new AWS_WebServiceCall(context, req, ServiceHandler.GET,
				Constants.getVehicleDetailsByUserId, new AwsResponseCallback() {

					@Override
					public void onResponseReceive(Object object) {
						// TODO Auto-generated method stub

						new UserDetails()
								.setRegNumberList((ArrayList<HashMap<String, String>>) object);
						HomeFragment.regvehicle = true;
						FragmentManager fragmentManager = getFragmentManager();
						Fragment fragment = new VehicleDetails_Fragment();
						fragmentManager.beginTransaction()
								.replace(R.id.frame_container, fragment).commit();
					//	checkvehiclereg(regvehicle);

					}

					@Override
					public void onErrorReceive(String string) {
						// TODO Auto-generated method stub
						// Toast.makeText(getActivity(), "Vehicle not re",
						// Toast.LENGTH_LONG).show();
						// edtuser_id.setFocusable(true);
						HomeFragment.regvehicle = false;
						//checkvehiclereg(regvehicle);

					}

				}).execute();
	}

}
>>>>>>> TMSC QA 3.4V
