<<<<<<< HEAD
package com.ttl.customersocialapp;

import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;

import com.ttl.adapter.ResponseCallback;
import com.ttl.adapter.AwsResponseCallback;
import com.ttl.communication.SamlArtifact;

import com.ttl.model.ServiceBookingUser;
import com.ttl.model.ServiceHandler;
import com.ttl.model.UserDetails;
import com.ttl.webservice.AWS_WebServiceCall;
import com.ttl.webservice.Config;
import com.ttl.webservice.Constants;
import com.ttl.webservice.WebServiceCall;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.Spinner;
import android.widget.Toast;

public class RegisterUserActivity extends Activity implements OnClickListener{

	Button malebutton , female , submit , cancel;
	 boolean selectedmale = true;
	 boolean seletedfemale = true;
	 EditText firstname ,lastname,contactnumber ,altcontactnumber ,emailid ,address ,pincode ,userid ,password;
	 InstantAutoComplete spinnerstate , spinnercity ,spinnerdistrict;
	 String selectedgender ,selectedfirsname , selectedlastname ,
	 selectedcontactnumber ,selectedaltcontactnumber ,selectedemailid ,
	 selectedaddress , selectedpincode , selecteduserid ,selectedpassword ,selectedstate ,selectedcity , selecteddist;
		ArrayList<String> stateVlaues = new ArrayList<String>();
		ArrayList<String> distVlaues = new ArrayList<String>();
		ArrayList<String> cityVlaues = new ArrayList<String>();

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_register_user);
		
		firstname = (EditText) findViewById(R.id.txtfirstname);
		lastname = (EditText) findViewById(R.id.txtlastname);
		contactnumber = (EditText) findViewById(R.id.txtcontactnumber);
		altcontactnumber = (EditText) findViewById(R.id.txtaltcontactnumber);
		emailid = (EditText) findViewById(R.id.txtemailid);
		address = (EditText) findViewById(R.id.txtaddress);
		pincode = (EditText) findViewById(R.id.txtpincode);
		userid = (EditText) findViewById(R.id.txtuserid);
		password = (EditText) findViewById(R.id.txtpassword);
		spinnercity = (InstantAutoComplete) findViewById(R.id.spincity);
		spinnerstate = (InstantAutoComplete) findViewById(R.id.spinstate);
	//	spinnerdistrict = (InstantAutoComplete) findViewById(R.id.spindistrict);
		
		malebutton = (Button) findViewById(R.id.male);
		female = (Button) findViewById(R.id.female);
		submit = (Button) findViewById(R.id.submit);
		cancel = (Button) findViewById(R.id.cancel);
		malebutton.setOnClickListener(this);
		female.setOnClickListener(this);
		submit.setOnClickListener(this);
		cancel.setOnClickListener(this);
		if(selectedmale)
		{
			malebutton.setBackgroundDrawable(getResources().getDrawable(R.drawable.selectedbutton));
			selectedgender = "Male";
		}else
		{
			female.setBackgroundDrawable(getResources().getDrawable(R.drawable.femaleselected));
			selectedgender = "Female";
		}
		
		/*if(Config.getSAMLARTIFACT().equals(""))
		{
			new SamlArtifact(RegisterUserActivity.this).execute();
			populateState();
		}else
		{
			populateState();

		}
		*/
	 
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		//getMenuInflater().inflate(R.menu.register_user, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	@Override
	public void onClick(View v) {
		// TODO Auto-generated method stub
		
		switch(v.getId())
		{
		case R.id.male :
			selectedmale=true;
			selectedgender = "Male";
			malebutton.setBackgroundDrawable(getResources().getDrawable(R.drawable.selectedbutton));
			female.setBackgroundDrawable(getResources().getDrawable(R.drawable.femalenormal));
			
			break;
		case R.id.female :
			selectedmale= false;
			selectedgender = "Female";
			malebutton.setBackgroundDrawable(getResources().getDrawable(R.drawable.malenormal));
			female.setBackgroundDrawable(getResources().getDrawable(R.drawable.femaleselected));
			break;
		case R.id.submit:
			selectedfirsname= firstname.getText().toString();
			selectedlastname = lastname.getText().toString();
			if(selectedmale)
				selectedgender = "Male";
			else
				selectedgender = "Female" ;
			
			selectedaltcontactnumber = altcontactnumber.getText().toString();
			selectedemailid =  emailid.getText().toString();
			selectedaddress = address.getText().toString();
			selectedstate = spinnerstate.getText().toString();
		//	selecteddist = spinnerdistrict.getText().toString();
			selectedcity = spinnercity.getText().toString();
			selectedpincode = pincode.getText().toString();
			selecteduserid = userid.getText().toString();
			selectedpassword = password.getText().toString();
			selectedcontactnumber = contactnumber.getText().toString();
			if(firstname.getText().toString().trim().length()==0)
			{
				firstname.setError("Please Enter your FristName");
				firstname.setFocusable(true);
			}
			else if(lastname.getText().toString().trim().length()==0)
			{
				lastname.setError("Please Enter your LastName");
				lastname.setFocusable(true);
			}		
			else if( contactnumber.getText().toString().trim().length() != 10)
			{
				contactnumber.setError("Please Enter your 10 digits Contact Number");
				contactnumber.setFocusable(true);
			}
			else if( contactnumber.getText().toString().trim().length()==0)
			{
				contactnumber.setError("Please Enter your 10 digits Contact Number");
				contactnumber.setFocusable(true);
			}
			else if(altcontactnumber.getText().toString().trim().length()==0 )
			{
				altcontactnumber.setError("Please Enter your 10 digits Alternate Contact No.");
				altcontactnumber.setFocusable(true);
			}
			/*else if(altcontactnumber.getText().toString().trim().length()!=10)
			{
				altcontactnumber.setError("Please Enter your 10 digits Alternate Contact No.");
				altcontactnumber.setFocusable(true);
			}*/
			
			else if(address.getText().toString().trim().length()==0)
			{
				address.setError("Please Enter your Address");
				address.setFocusable(true);
			}
			else if(pincode.getText().toString().trim().length()==0)
			{
				pincode.setError("Please Enter PinCode");
				pincode.setFocusable(true);
			}
			else if(pincode.getText().toString().trim().length()<6)
			{
				pincode.setError("Please Enter compelete PinCode  ");
				pincode.setFocusable(true);
			}
			else if(userid.getText().toString().trim().length()==0)
			{
				userid.setError("Please Enter UserID");
				userid.setFocusable(true);
			}
			
			else if(password.getText().toString().trim().length()==0)
			{	
				password.setError("Please Enter Password");
				password.setFocusable(true);
			}
			else if(!(isEmailValid(emailid.getText().toString())))
			{
				Log.d("Email ID", emailid.getText().toString());
				emailid.setError("Please Enter your Email ID");
				emailid.setFocusable(true);
			}
			else
			{
			registerUser();
			}
		/*	if(selectedfirsname.equals("") || selectedlastname.equals("") || selectedgender.equals("") || selectedcontactnumber.equals("") ||
					selectedaltcontactnumber.equals("") || selectedemailid.equals("") || selectedaddress.equals("") ||
					selectedstate.endsWith("") || selectedcity.equals("") || selecteddist.equals("") || selectedpincode.equals("")
					|| selecteduserid.equals("") || selectedpassword.equals(""))
			{
				Toast.makeText(getApplicationContext(), "Please fill all details", Toast.LENGTH_SHORT).show();

			}
			else
			{
			
			String _url = getApplicationContext().getResources()
			.getString(R.string.URL)
			+ Config.getSAMLARTIFACT();
			String req = "<SOAP:Envelope xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\">"
					+ "<SOAP:Body>"
					+ "<GetCustomerVehicleDetailsCSB xmlns=\"src.com.CSB\" preserveSpace=\"no\" qAccess=\"0\" qValues=\"\">"
					+ "<RegistrationNumber></RegistrationNumber>"
					+ "<ChassisNumber></ChassisNumber>" + "<MobileNo>"+selectedcontactnumber+"</MobileNo>"
					+ "</GetCustomerVehicleDetailsCSB>" + "</SOAP:Body>" + "</SOAP:Envelope>";

			new WebServiceCall(this, req, Constants.GetCustomerVehicleDetailsCSB, new ResponseCallback() {

				@Override
				public void onResponseReceive(Object object) {
					
					
					ServiceBookingUser user = (ServiceBookingUser) object;
					if(!(user.getREGISTRATIONNUMBER().equals("")))
					{
					//Toast.makeText(getApplicationContext(), "Success", Toast.LENGTH_SHORT).show();
						
						
					registerUser();
				//	Log.d("Here previpus call", "Register ");

					
					}
				}

				@Override
				public void onErrorReceive(String string) {
					
					Toast.makeText(getApplicationContext(), "Number you have enetred is not match with our record. Please verify number with nearest Tata Dealer", Toast.LENGTH_SHORT).show();
				}

			
			},"Populating Data..").execute();    
	
			//}
	*/
			break;
		case R.id.cancel :
			Intent intent = new Intent(getApplicationContext(), LoginActivity.class);
			startActivity(intent);
			break;
		}
	}
	// ### validate e-mail
		public boolean isEmailValid(String email)
	    {
	         String regExpn =
	             "^(([\\w-]+\\.)+[\\w-]+|([a-zA-Z]{1}|[\\w-]{2,}))@"
	                 +"((([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\.([0-1]?"
	                   +"[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\."
	                   +"([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\.([0-1]?"
	                   +"[0-9]{1,2}|25[0-5]|2[0-4][0-9])){1}|"
	                   +"([a-zA-Z]+[\\w-]+\\.)+[a-zA-Z]{2,4})$";

	     CharSequence inputStr = email;

	     Pattern pattern = Pattern.compile(regExpn,Pattern.CASE_INSENSITIVE);
	     Matcher matcher = pattern.matcher(inputStr);

	     if(matcher.matches())
	        return true;
	     else
	        return false;
	    }
	/*public void populateState()
	{
		String req = "<SOAP:Envelope xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\">"
				+"<SOAP:Header xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\">"
				+"<header xmlns=\"http://schemas.cordys.com/General/1.0/\">"
				+"<Logger xmlns=\"http://schemas.cordys.com/General/1.0/\">"
				+"<DC xmlns=\"http://schemas.cordys.com/General/1.0/\" name=\"XForms\">/testtool/testtool.caf</DC>"
				+"<DC xmlns=\"http://schemas.cordys.com/General/1.0/\" name=\"XForms\">/methodsetsmanager/methodsetexplorer.caf</DC>"
				+"<DC xmlns=\"http://schemas.cordys.com/General/1.0/\" name=\"XForms\">/sysresourcemgr/sysresourcemgr.caf</DC>"
				+"<DC xmlns=\"http://schemas.cordys.com/General/1.0/\" name=\"XForms\">/com/cordys/cusp/cusp.caf</DC>"
				+"<DC xmlns=\"http://schemas.cordys.com/General/1.0/\" name=\"hopCount\">0</DC>"
				+"<DC xmlns=\"http://schemas.cordys.com/General/1.0/\" name=\"correlationID\">00215ef7-d846-11e4-faf1-0ea55009db29</DC>"
				+"</Logger> </header></SOAP:Header> <SOAP:Body>"
				+"<GetAllIndianStates xmlns=\"http://schemas.cordys.com/com.cordys.tatamotors.utilitysiebelwsapps\" preserveSpace=\"no\" qAccess=\"0\" qValues=\"\" />"
				+"</SOAP:Body></SOAP:Envelope>";
		
		new WebServiceCall(this, req, Constants.GetAllIndianStates, new ResponseCallback() {

			@Override
			public void onResponseReceive(Object object) {
				
				stateVlaues = (ArrayList<String>) object;

				ArrayAdapter<String> aa = new ArrayAdapter<String>(RegisterUserActivity.this,android.R.layout.simple_spinner_item, stateVlaues);
				//aa.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
				//spinState.setAdapter(aa);
				spinnerstate.setThreshold(1);
				//spinnerstate.setDropDownBackgroundResource(R.color.spinback);
				spinnerstate.setAdapter(aa);
				spinnerstate.setOnClickListener(new OnClickListener() {
					
					@Override
					public void onClick(View v) {
						// TODO Auto-generated method stub
						spinnerstate.showDropDown();
					}
				});
				
				spinnerstate.setOnItemClickListener(new OnItemClickListener() {

					@Override
					public void onItemClick(AdapterView<?> parent,
							View view, int position, long id) {
						// TODO Auto-generated method stub
						selectedstate = parent.getItemAtPosition(position).toString();
						String req = "<SOAP:Envelope xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\"> <SOAP:Body><GetAllIndianDistricts xmlns=\"http://schemas.cordys.com/com.cordys.tatamotors.utilitysiebelwsapps\" preserveSpace=\"no\" qAccess=\"0\" qValues=\"\">"
								+"<state>"+selectedstate+"</state>"
								+"</GetAllIndianDistricts>"
								+"</SOAP:Body></SOAP:Envelope>";
						new WebServiceCall(RegisterUserActivity.this, req,
								Constants.GetAllIndianDistricts, new ResponseCallback() {

									@Override
									public void onResponseReceive(Object object) {
										// TODO Auto-generated method stub
										distVlaues = (ArrayList<String>) object;

										ArrayAdapter<String> aa = new ArrayAdapter<String>(RegisterUserActivity.this,android.R.layout.simple_spinner_item, distVlaues);
										//aa.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
										//spinState.setAdapter(aa);
										spinnerdistrict.setThreshold(1);
										//spinnerstate.setDropDownBackgroundResource(R.color.spinback);
										spinnerdistrict.setAdapter(aa);
										spinnerdistrict.setOnClickListener(new OnClickListener() {
											
											@Override
											public void onClick(View v) {
												// TODO Auto-generated method stub
												spinnerdistrict.showDropDown();
											}
										});	
										spinnerdistrict.setOnItemClickListener(new OnItemClickListener() {

											@Override
											public void onItemClick(AdapterView<?> parent,
													View view, int position, long id) {
												// TODO Auto-generated method stub
												selecteddist = parent.getItemAtPosition(position).toString();
												String req = "<SOAP:Envelope xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\">"
														+"<SOAP:Body>"
														+"<GetAllIndianCity xmlns=\"http://schemas.cordys.com/com.cordys.tatamotors.utilitysiebelwsapps\" preserveSpace=\"no\" qAccess=\"0\" qValues=\"\">"
														+"<state>"+selectedstate+"</state>"
														+"<dist>"+selecteddist+"</dist>"
														+"</GetAllIndianCity> </SOAP:Body></SOAP:Envelope>";
												new WebServiceCall(RegisterUserActivity.this, req,
														Constants.GetAllIndianCity, new ResponseCallback() {

															@Override
															public void onResponseReceive(Object object) {
																// TODO Auto-generated method stub
																cityVlaues = (ArrayList<String>) object;

																ArrayAdapter<String> aa = new ArrayAdapter<String>(RegisterUserActivity.this,android.R.layout.simple_spinner_item, cityVlaues);
																//aa.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
																//spinState.setAdapter(aa);
																spinnercity.setThreshold(1);
																//spinnerstate.setDropDownBackgroundResource(R.color.spinback);
																spinnercity.setAdapter(aa);
																spinnercity.setOnClickListener(new OnClickListener() {
																	
																	@Override
																	public void onClick(View v) {
																		// TODO Auto-generated method stub
																		spinnercity.showDropDown();
																	}
																});	
																selectedcity = spinnercity.getText().toString();
															}

															@Override
															public void onErrorReceive(String string) {
																// TODO Auto-generated method stub

															}

															
														}, "Run").execute();
											}
										});	
									
									}

									@Override
									public void onErrorReceive(String string) {
										// TODO Auto-generated method stub

									}

									
								}, "Run").execute();
					}
				});	
			}

			@Override
			public void onErrorReceive(String string) {
				
				//Toast.makeText(getApplicationContext(), "Not a valid user", Toast.LENGTH_SHORT).show();
			}

		},"Populating Data..").execute();  
	}*/
		public void populateState()
		{
			  String req = "http://tmlmobilityservices.co.in:8080/CustomerApp_Restws/customerapp/costEstimateServices/getState";
		       new AWS_WebServiceCall(this, req,ServiceHandler.GET ,Constants.getState,
						new AwsResponseCallback() {

							@Override
							public void onResponseReceive(Object object) {
								// TODO Auto-generated method stub
								stateVlaues = (ArrayList<String>) object;

								ArrayAdapter<String> aa = new ArrayAdapter<String>(RegisterUserActivity.this,android.R.layout.simple_spinner_item, stateVlaues);
								//aa.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
								//spinState.setAdapter(aa);
								spinnerstate.setThreshold(1);
								//spinnerstate.setDropDownBackgroundResource(R.color.spinback);
								spinnerstate.setAdapter(aa);
								spinnerstate.setOnClickListener(new OnClickListener() {
									
									@Override
									public void onClick(View v) {
										// TODO Auto-generated method stub
										spinnerstate.showDropDown();
									}
								});
							}

							@Override
							public void onErrorReceive(String string) {
								// TODO Auto-generated method stub
								
							} }).execute();
		       
		       spinnerstate.setOnClickListener(new OnClickListener() {
					
					@Override
					public void onClick(View v) {
						// TODO Auto-generated method stub
						spinnerstate.showDropDown();
					}
				}); 
		       
		       spinnerstate.setOnItemClickListener(new OnItemClickListener() {

		   		@Override
		   		public void onItemClick(AdapterView<?> parent, View view, int position,
		   				long id) {
		   			// TODO Auto-generated method stub
		   			selectedstate = parent.getItemAtPosition(position).toString();
		   			String req = "http://tmlmobilityservices.co.in:8080/CustomerApp_Restws/customerapp/costEstimateServices/getCityFromState";
		   			List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(1);
		   			nameValuePairs.add(new BasicNameValuePair("state",selectedstate));
		   			new AWS_WebServiceCall(getApplicationContext(), req,ServiceHandler.POST ,Constants.getCityFromState,
		   					nameValuePairs,new AwsResponseCallback() {

		   						@Override
		   						public void onResponseReceive(Object object) {
		   							// TODO Auto-generated method stub
		   							cityVlaues = (ArrayList<String>) object;

									ArrayAdapter<String> aa = new ArrayAdapter<String>(RegisterUserActivity.this,android.R.layout.simple_spinner_item, cityVlaues);
									//aa.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
									//spinState.setAdapter(aa);
									spinnercity.setThreshold(1);
									//spinnerstate.setDropDownBackgroundResource(R.color.spinback);
									spinnercity.setAdapter(aa);
									spinnercity.setOnClickListener(new OnClickListener() {
										
										@Override
										public void onClick(View v) {
											// TODO Auto-generated method stub
											spinnercity.showDropDown();
										}
									});	
									selectedcity = spinnercity.getText().toString();
		   						}

								@Override
								public void onErrorReceive(String string) {
									// TODO Auto-generated method stub
									
								} }).execute();
					
				}
			});
			
		}
	public void registerUser()
	{
		
		
		String req = "http://tmlmobilityservices.co.in:8080/CustomerApp_Restws/customerapp/user/registeruser";
		List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(13);
		nameValuePairs.add(new BasicNameValuePair("first_name",selectedfirsname));
		nameValuePairs.add(new BasicNameValuePair("last_name",selectedlastname));
		nameValuePairs.add(new BasicNameValuePair("gender",selectedgender));
		nameValuePairs.add(new BasicNameValuePair("contact_number",selectedcontactnumber));
		nameValuePairs.add(new BasicNameValuePair("alt_contact_number",selectedaltcontactnumber));
		nameValuePairs.add(new BasicNameValuePair("email_id",selectedemailid));
		nameValuePairs.add(new BasicNameValuePair("address",selectedaddress));
		nameValuePairs.add(new BasicNameValuePair("city",selectedcity));
		nameValuePairs.add(new BasicNameValuePair("pincode",selectedpincode));
		nameValuePairs.add(new BasicNameValuePair("district",selecteddist));
		nameValuePairs.add(new BasicNameValuePair("state",selectedstate));
		nameValuePairs.add(new BasicNameValuePair("user_id",selecteduserid));
		nameValuePairs.add(new BasicNameValuePair("password",selectedpassword));
		
		new AWS_WebServiceCall(RegisterUserActivity.this, req,ServiceHandler.POST ,Constants.registeruser,
				nameValuePairs,new AwsResponseCallback() {

					@Override
					public void onResponseReceive(Object object) {
						// TODO Auto-generated method stub
						boolean register = (boolean) object;
						Log.d("Here", "Register ");
						if(register)
						{
							 UserDetails.setFirst_name(selectedfirsname);
			                  UserDetails.setLast_name(selectedlastname);
			                  UserDetails.setGender(selectedgender);
			                  UserDetails.setEmail_id(selectedemailid);
			                  UserDetails.setContact_number(selectedcontactnumber);
			                  UserDetails.setAlt_contact_number(selectedaltcontactnumber);
			                  UserDetails.setAddress(selectedaddress);
			                  UserDetails.setCity(selectedcity);
			                  UserDetails.setPincode(selectedpincode);
			                  UserDetails.setDistrict(selecteddist);
			                  UserDetails.setState(selectedstate);
			                  UserDetails.setUser_id(selecteduserid);
			                  UserDetails.setPassword(selectedpassword);
							Toast.makeText(getApplicationContext(), "Registration succesful.", Toast.LENGTH_LONG).show();
							Log.d("Success", "Register ");

							Intent intent = new Intent(RegisterUserActivity.this, HomeActivity.class);
							startActivity(intent);
						}
						else
						{
							Log.d("Here", "Register ");

							Toast.makeText(getApplicationContext(), "Registration ussuccesful, please try again", Toast.LENGTH_LONG).show();
						}
					
					}

					@Override
					public void onErrorReceive(String string) {
						// TODO Auto-generated method stub
						
					//	Toast.makeText(getApplicationContext(), string, Toast.LENGTH_LONG).show();
						if(string.contains("Duplicate Entry"))
						{
						userid.setError("User id already exist , please change");
						userid.setFocusable(true);
						}
					}

					
				}).execute();
		
	}
	
	private String selectState(String tempstate2) {
		// TODO Auto-generated method stub
		if(tempstate2.equalsIgnoreCase("AN"))
			return "Andaman and Nicobar";
		else
			if(tempstate2.equalsIgnoreCase("AP"))
				return "Andhra Pradesh";
			else
				if(tempstate2.equalsIgnoreCase("TG"))
					return "Telangana";
				else
					if(tempstate2.equalsIgnoreCase("AR"))
						return "Arunachal Pradesh";
					else
						if(tempstate2.equalsIgnoreCase("AS"))
							return "Assam";
						else
							if(tempstate2.equalsIgnoreCase("BR"))
								return "Bihar";
							else
								if(tempstate2.equalsIgnoreCase("CH"))
									return "Chandigarh";
								else
									if(tempstate2.equalsIgnoreCase("CG"))
										return "Chattisgarh";
									else
										if(tempstate2.equalsIgnoreCase("CHN"))
											return "Chennai";
										else
											if(tempstate2.equalsIgnoreCase("DN"))
												return "Dadra, Nagarhaveli";
											else
												if(tempstate2.equalsIgnoreCase("DD"))
													return "Daman";
												else
													if(tempstate2.equalsIgnoreCase("DL"))
														return "Delhi";
													else
														if(tempstate2.equalsIgnoreCase("GA"))
															return "Goa";
														else
															if(tempstate2.equalsIgnoreCase("GJ"))
																return "Gujarat";
															else
																if(tempstate2.equalsIgnoreCase("HR"))
																	return "Haryana";
																else
																	if(tempstate2.equalsIgnoreCase("HP"))
																		return "Himachal Pradesh";
																	else
																		if(tempstate2.equalsIgnoreCase("JK"))
																			return "Jammu and Kashmir";
																		else
																			if(tempstate2.equalsIgnoreCase("JN"))
																				return "Jharkhand";
																			else
																				if(tempstate2.equalsIgnoreCase("KA"))
																					return "Karnataka";
																				else
																					if(tempstate2.equalsIgnoreCase("KL"))
																						return "Kerala";
																					else
																						if(tempstate2.equalsIgnoreCase("LD"))
																							return "Lakshwadeep";
																						else
																							if(tempstate2.equalsIgnoreCase("MP"))
																								return "Madhya Pradesh";
																							else
																								if(tempstate2.equalsIgnoreCase("MH"))
																									return "Maharashtra";
				if(tempstate2.equalsIgnoreCase("MN"))
					return "Manipur";
				else
					if(tempstate2.equalsIgnoreCase("ML"))
						return "Meghalaya";
					else
						if(tempstate2.equalsIgnoreCase("MZ"))
							return "Mizoram";
						else
							if(tempstate2.equalsIgnoreCase("NL"))
								return "Nagaland";
							else
								if(tempstate2.equalsIgnoreCase("NTN"))
									return "North Tamil Nadu";
								else
									if(tempstate2.equalsIgnoreCase("OR"))
										return "Orissa";
									else
										if(tempstate2.equalsIgnoreCase("PY"))
											return "Pondicherry";
										else
											if(tempstate2.equalsIgnoreCase("PB"))
												return "Punjab";
											else
												if(tempstate2.equalsIgnoreCase("RJ"))
													return "Rajasthan";
												else
													if(tempstate2.equalsIgnoreCase("SK"))
														return "Sikkim";
													else
														if(tempstate2.equalsIgnoreCase("TN"))
															return "Tamil Nadu";
														else
															if(tempstate2.equalsIgnoreCase("TR"))
																return "Tripura";
															else
																if(tempstate2.equalsIgnoreCase("UA"))
																	return "Uttrakhand";
																else
																	if(tempstate2.equalsIgnoreCase("UP"))
																		return "Uttar Pradesh";
																	else
																		if(tempstate2.equalsIgnoreCase("WB"))
																			return "West Bengal";
																		else
																			if(tempstate2.equalsIgnoreCase("APO"))
																				return "APO";
																			else
																				if(tempstate2.equalsIgnoreCase("Others"))
																				return "OT";
																				else
																					return "";
					
																
	}

}
=======
package com.ttl.customersocialapp;

import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;

import com.ttl.adapter.ResponseCallback;
import com.ttl.adapter.AwsResponseCallback;
import com.ttl.communication.SamlArtifact;

import com.ttl.model.ServiceBookingUser;
import com.ttl.model.ServiceHandler;
import com.ttl.model.UserDetails;
import com.ttl.webservice.AWS_WebServiceCall;
import com.ttl.webservice.Config;
import com.ttl.webservice.Constants;
import com.ttl.webservice.WebServiceCall;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.Spinner;
import android.widget.Toast;

public class RegisterUserActivity extends Activity implements OnClickListener{

	Button malebutton , female , submit , cancel;
	 boolean selectedmale = true;
	 boolean seletedfemale = true;
	 EditText firstname ,lastname,contactnumber ,altcontactnumber ,emailid ,address ,pincode ,userid ,password;
	 InstantAutoComplete spinnerstate , spinnercity ,spinnerdistrict;
	 String selectedgender ,selectedfirsname , selectedlastname ,
	 selectedcontactnumber ,selectedaltcontactnumber ,selectedemailid ,
	 selectedaddress , selectedpincode , selecteduserid ,selectedpassword ,selectedstate ,selectedcity , selecteddist;
		ArrayList<String> stateVlaues = new ArrayList<String>();
		ArrayList<String> distVlaues = new ArrayList<String>();
		ArrayList<String> cityVlaues = new ArrayList<String>();

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_register_user);
		
		firstname = (EditText) findViewById(R.id.txtfirstname);
		lastname = (EditText) findViewById(R.id.txtlastname);
		contactnumber = (EditText) findViewById(R.id.txtcontactnumber);
		altcontactnumber = (EditText) findViewById(R.id.txtaltcontactnumber);
		emailid = (EditText) findViewById(R.id.txtemailid);
		address = (EditText) findViewById(R.id.txtaddress);
		pincode = (EditText) findViewById(R.id.txtpincode);
		userid = (EditText) findViewById(R.id.txtuserid);
		password = (EditText) findViewById(R.id.txtpassword);
		spinnercity = (InstantAutoComplete) findViewById(R.id.spincity);
		spinnerstate = (InstantAutoComplete) findViewById(R.id.spinstate);
	//	spinnerdistrict = (InstantAutoComplete) findViewById(R.id.spindistrict);
		
		malebutton = (Button) findViewById(R.id.male);
		female = (Button) findViewById(R.id.female);
		submit = (Button) findViewById(R.id.submit);
		cancel = (Button) findViewById(R.id.cancel);
		malebutton.setOnClickListener(this);
		female.setOnClickListener(this);
		submit.setOnClickListener(this);
		cancel.setOnClickListener(this);
		if(selectedmale)
		{
			malebutton.setBackgroundDrawable(getResources().getDrawable(R.drawable.selectedbutton));
			selectedgender = "Male";
		}else
		{
			female.setBackgroundDrawable(getResources().getDrawable(R.drawable.femaleselected));
			selectedgender = "Female";
		}
		
		/*if(Config.getSAMLARTIFACT().equals(""))
		{
			new SamlArtifact(RegisterUserActivity.this).execute();
			populateState();
		}else
		{
			populateState();

		}
		*/
	 
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		//getMenuInflater().inflate(R.menu.register_user, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	@Override
	public void onClick(View v) {
		// TODO Auto-generated method stub
		
		switch(v.getId())
		{
		case R.id.male :
			selectedmale=true;
			selectedgender = "Male";
			malebutton.setBackgroundDrawable(getResources().getDrawable(R.drawable.selectedbutton));
			female.setBackgroundDrawable(getResources().getDrawable(R.drawable.femalenormal));
			
			break;
		case R.id.female :
			selectedmale= false;
			selectedgender = "Female";
			malebutton.setBackgroundDrawable(getResources().getDrawable(R.drawable.malenormal));
			female.setBackgroundDrawable(getResources().getDrawable(R.drawable.femaleselected));
			break;
		case R.id.submit:
			selectedfirsname= firstname.getText().toString();
			selectedlastname = lastname.getText().toString();
			if(selectedmale)
				selectedgender = "Male";
			else
				selectedgender = "Female" ;
			
			selectedaltcontactnumber = altcontactnumber.getText().toString();
			selectedemailid =  emailid.getText().toString();
			selectedaddress = address.getText().toString();
			selectedstate = spinnerstate.getText().toString();
		//	selecteddist = spinnerdistrict.getText().toString();
			selectedcity = spinnercity.getText().toString();
			selectedpincode = pincode.getText().toString();
			selecteduserid = userid.getText().toString();
			selectedpassword = password.getText().toString();
			selectedcontactnumber = contactnumber.getText().toString();
			if(firstname.getText().toString().trim().length()==0)
			{
				firstname.setError("Please Enter your FristName");
				firstname.setFocusable(true);
			}
			else if(lastname.getText().toString().trim().length()==0)
			{
				lastname.setError("Please Enter your LastName");
				lastname.setFocusable(true);
			}		
			else if( contactnumber.getText().toString().trim().length() != 10)
			{
				contactnumber.setError("Please Enter your 10 digits Contact Number");
				contactnumber.setFocusable(true);
			}
			else if( contactnumber.getText().toString().trim().length()==0)
			{
				contactnumber.setError("Please Enter your 10 digits Contact Number");
				contactnumber.setFocusable(true);
			}
			else if(altcontactnumber.getText().toString().trim().length()==0 )
			{
				altcontactnumber.setError("Please Enter your 10 digits Alternate Contact No.");
				altcontactnumber.setFocusable(true);
			}
			/*else if(altcontactnumber.getText().toString().trim().length()!=10)
			{
				altcontactnumber.setError("Please Enter your 10 digits Alternate Contact No.");
				altcontactnumber.setFocusable(true);
			}*/
			
			else if(address.getText().toString().trim().length()==0)
			{
				address.setError("Please Enter your Address");
				address.setFocusable(true);
			}
			else if(pincode.getText().toString().trim().length()==0)
			{
				pincode.setError("Please Enter PinCode");
				pincode.setFocusable(true);
			}
			else if(pincode.getText().toString().trim().length()<6)
			{
				pincode.setError("Please Enter compelete PinCode  ");
				pincode.setFocusable(true);
			}
			else if(userid.getText().toString().trim().length()==0)
			{
				userid.setError("Please Enter UserID");
				userid.setFocusable(true);
			}
			
			else if(password.getText().toString().trim().length()==0)
			{	
				password.setError("Please Enter Password");
				password.setFocusable(true);
			}
			else if(!(isEmailValid(emailid.getText().toString())))
			{
				Log.d("Email ID", emailid.getText().toString());
				emailid.setError("Please Enter your Email ID");
				emailid.setFocusable(true);
			}
			else
			{
			registerUser();
			}
		/*	if(selectedfirsname.equals("") || selectedlastname.equals("") || selectedgender.equals("") || selectedcontactnumber.equals("") ||
					selectedaltcontactnumber.equals("") || selectedemailid.equals("") || selectedaddress.equals("") ||
					selectedstate.endsWith("") || selectedcity.equals("") || selecteddist.equals("") || selectedpincode.equals("")
					|| selecteduserid.equals("") || selectedpassword.equals(""))
			{
				Toast.makeText(getApplicationContext(), "Please fill all details", Toast.LENGTH_SHORT).show();

			}
			else
			{
			
			String _url = getApplicationContext().getResources()
			.getString(R.string.URL)
			+ Config.getSAMLARTIFACT();
			String req = "<SOAP:Envelope xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\">"
					+ "<SOAP:Body>"
					+ "<GetCustomerVehicleDetailsCSB xmlns=\"src.com.CSB\" preserveSpace=\"no\" qAccess=\"0\" qValues=\"\">"
					+ "<RegistrationNumber></RegistrationNumber>"
					+ "<ChassisNumber></ChassisNumber>" + "<MobileNo>"+selectedcontactnumber+"</MobileNo>"
					+ "</GetCustomerVehicleDetailsCSB>" + "</SOAP:Body>" + "</SOAP:Envelope>";

			new WebServiceCall(this, req, Constants.GetCustomerVehicleDetailsCSB, new ResponseCallback() {

				@Override
				public void onResponseReceive(Object object) {
					
					
					ServiceBookingUser user = (ServiceBookingUser) object;
					if(!(user.getREGISTRATIONNUMBER().equals("")))
					{
					//Toast.makeText(getApplicationContext(), "Success", Toast.LENGTH_SHORT).show();
						
						
					registerUser();
				//	Log.d("Here previpus call", "Register ");

					
					}
				}

				@Override
				public void onErrorReceive(String string) {
					
					Toast.makeText(getApplicationContext(), "Number you have enetred is not match with our record. Please verify number with nearest Tata Dealer", Toast.LENGTH_SHORT).show();
				}

			
			},"Populating Data..").execute();    
	
			//}
	*/
			break;
		case R.id.cancel :
			Intent intent = new Intent(getApplicationContext(), LoginActivity.class);
			startActivity(intent);
			break;
		}
	}
	// ### validate e-mail
		public boolean isEmailValid(String email)
	    {
	         String regExpn =
	             "^(([\\w-]+\\.)+[\\w-]+|([a-zA-Z]{1}|[\\w-]{2,}))@"
	                 +"((([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\.([0-1]?"
	                   +"[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\."
	                   +"([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\.([0-1]?"
	                   +"[0-9]{1,2}|25[0-5]|2[0-4][0-9])){1}|"
	                   +"([a-zA-Z]+[\\w-]+\\.)+[a-zA-Z]{2,4})$";

	     CharSequence inputStr = email;

	     Pattern pattern = Pattern.compile(regExpn,Pattern.CASE_INSENSITIVE);
	     Matcher matcher = pattern.matcher(inputStr);

	     if(matcher.matches())
	        return true;
	     else
	        return false;
	    }
	/*public void populateState()
	{
		String req = "<SOAP:Envelope xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\">"
				+"<SOAP:Header xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\">"
				+"<header xmlns=\"http://schemas.cordys.com/General/1.0/\">"
				+"<Logger xmlns=\"http://schemas.cordys.com/General/1.0/\">"
				+"<DC xmlns=\"http://schemas.cordys.com/General/1.0/\" name=\"XForms\">/testtool/testtool.caf</DC>"
				+"<DC xmlns=\"http://schemas.cordys.com/General/1.0/\" name=\"XForms\">/methodsetsmanager/methodsetexplorer.caf</DC>"
				+"<DC xmlns=\"http://schemas.cordys.com/General/1.0/\" name=\"XForms\">/sysresourcemgr/sysresourcemgr.caf</DC>"
				+"<DC xmlns=\"http://schemas.cordys.com/General/1.0/\" name=\"XForms\">/com/cordys/cusp/cusp.caf</DC>"
				+"<DC xmlns=\"http://schemas.cordys.com/General/1.0/\" name=\"hopCount\">0</DC>"
				+"<DC xmlns=\"http://schemas.cordys.com/General/1.0/\" name=\"correlationID\">00215ef7-d846-11e4-faf1-0ea55009db29</DC>"
				+"</Logger> </header></SOAP:Header> <SOAP:Body>"
				+"<GetAllIndianStates xmlns=\"http://schemas.cordys.com/com.cordys.tatamotors.utilitysiebelwsapps\" preserveSpace=\"no\" qAccess=\"0\" qValues=\"\" />"
				+"</SOAP:Body></SOAP:Envelope>";
		
		new WebServiceCall(this, req, Constants.GetAllIndianStates, new ResponseCallback() {

			@Override
			public void onResponseReceive(Object object) {
				
				stateVlaues = (ArrayList<String>) object;

				ArrayAdapter<String> aa = new ArrayAdapter<String>(RegisterUserActivity.this,android.R.layout.simple_spinner_item, stateVlaues);
				//aa.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
				//spinState.setAdapter(aa);
				spinnerstate.setThreshold(1);
				//spinnerstate.setDropDownBackgroundResource(R.color.spinback);
				spinnerstate.setAdapter(aa);
				spinnerstate.setOnClickListener(new OnClickListener() {
					
					@Override
					public void onClick(View v) {
						// TODO Auto-generated method stub
						spinnerstate.showDropDown();
					}
				});
				
				spinnerstate.setOnItemClickListener(new OnItemClickListener() {

					@Override
					public void onItemClick(AdapterView<?> parent,
							View view, int position, long id) {
						// TODO Auto-generated method stub
						selectedstate = parent.getItemAtPosition(position).toString();
						String req = "<SOAP:Envelope xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\"> <SOAP:Body><GetAllIndianDistricts xmlns=\"http://schemas.cordys.com/com.cordys.tatamotors.utilitysiebelwsapps\" preserveSpace=\"no\" qAccess=\"0\" qValues=\"\">"
								+"<state>"+selectedstate+"</state>"
								+"</GetAllIndianDistricts>"
								+"</SOAP:Body></SOAP:Envelope>";
						new WebServiceCall(RegisterUserActivity.this, req,
								Constants.GetAllIndianDistricts, new ResponseCallback() {

									@Override
									public void onResponseReceive(Object object) {
										// TODO Auto-generated method stub
										distVlaues = (ArrayList<String>) object;

										ArrayAdapter<String> aa = new ArrayAdapter<String>(RegisterUserActivity.this,android.R.layout.simple_spinner_item, distVlaues);
										//aa.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
										//spinState.setAdapter(aa);
										spinnerdistrict.setThreshold(1);
										//spinnerstate.setDropDownBackgroundResource(R.color.spinback);
										spinnerdistrict.setAdapter(aa);
										spinnerdistrict.setOnClickListener(new OnClickListener() {
											
											@Override
											public void onClick(View v) {
												// TODO Auto-generated method stub
												spinnerdistrict.showDropDown();
											}
										});	
										spinnerdistrict.setOnItemClickListener(new OnItemClickListener() {

											@Override
											public void onItemClick(AdapterView<?> parent,
													View view, int position, long id) {
												// TODO Auto-generated method stub
												selecteddist = parent.getItemAtPosition(position).toString();
												String req = "<SOAP:Envelope xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\">"
														+"<SOAP:Body>"
														+"<GetAllIndianCity xmlns=\"http://schemas.cordys.com/com.cordys.tatamotors.utilitysiebelwsapps\" preserveSpace=\"no\" qAccess=\"0\" qValues=\"\">"
														+"<state>"+selectedstate+"</state>"
														+"<dist>"+selecteddist+"</dist>"
														+"</GetAllIndianCity> </SOAP:Body></SOAP:Envelope>";
												new WebServiceCall(RegisterUserActivity.this, req,
														Constants.GetAllIndianCity, new ResponseCallback() {

															@Override
															public void onResponseReceive(Object object) {
																// TODO Auto-generated method stub
																cityVlaues = (ArrayList<String>) object;

																ArrayAdapter<String> aa = new ArrayAdapter<String>(RegisterUserActivity.this,android.R.layout.simple_spinner_item, cityVlaues);
																//aa.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
																//spinState.setAdapter(aa);
																spinnercity.setThreshold(1);
																//spinnerstate.setDropDownBackgroundResource(R.color.spinback);
																spinnercity.setAdapter(aa);
																spinnercity.setOnClickListener(new OnClickListener() {
																	
																	@Override
																	public void onClick(View v) {
																		// TODO Auto-generated method stub
																		spinnercity.showDropDown();
																	}
																});	
																selectedcity = spinnercity.getText().toString();
															}

															@Override
															public void onErrorReceive(String string) {
																// TODO Auto-generated method stub

															}

															
														}, "Run").execute();
											}
										});	
									
									}

									@Override
									public void onErrorReceive(String string) {
										// TODO Auto-generated method stub

									}

									
								}, "Run").execute();
					}
				});	
			}

			@Override
			public void onErrorReceive(String string) {
				
				//Toast.makeText(getApplicationContext(), "Not a valid user", Toast.LENGTH_SHORT).show();
			}

		},"Populating Data..").execute();  
	}*/
		public void populateState()
		{
			  String req = "http://tmlmobilityservices.co.in:8080/CustomerApp_Restws/customerapp/costEstimateServices/getState";
		       new AWS_WebServiceCall(this, req,ServiceHandler.GET ,Constants.getState,
						new AwsResponseCallback() {

							@Override
							public void onResponseReceive(Object object) {
								// TODO Auto-generated method stub
								stateVlaues = (ArrayList<String>) object;

								ArrayAdapter<String> aa = new ArrayAdapter<String>(RegisterUserActivity.this,android.R.layout.simple_spinner_item, stateVlaues);
								//aa.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
								//spinState.setAdapter(aa);
								spinnerstate.setThreshold(1);
								//spinnerstate.setDropDownBackgroundResource(R.color.spinback);
								spinnerstate.setAdapter(aa);
								spinnerstate.setOnClickListener(new OnClickListener() {
									
									@Override
									public void onClick(View v) {
										// TODO Auto-generated method stub
										spinnerstate.showDropDown();
									}
								});
							}

							@Override
							public void onErrorReceive(String string) {
								// TODO Auto-generated method stub
								
							} }).execute();
		       
		       spinnerstate.setOnClickListener(new OnClickListener() {
					
					@Override
					public void onClick(View v) {
						// TODO Auto-generated method stub
						spinnerstate.showDropDown();
					}
				}); 
		       
		       spinnerstate.setOnItemClickListener(new OnItemClickListener() {

		   		@Override
		   		public void onItemClick(AdapterView<?> parent, View view, int position,
		   				long id) {
		   			// TODO Auto-generated method stub
		   			selectedstate = parent.getItemAtPosition(position).toString();
		   			String req = "http://tmlmobilityservices.co.in:8080/CustomerApp_Restws/customerapp/costEstimateServices/getCityFromState";
		   			List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(1);
		   			nameValuePairs.add(new BasicNameValuePair("state",selectedstate));
		   			new AWS_WebServiceCall(getApplicationContext(), req,ServiceHandler.POST ,Constants.getCityFromState,
		   					nameValuePairs,new AwsResponseCallback() {

		   						@Override
		   						public void onResponseReceive(Object object) {
		   							// TODO Auto-generated method stub
		   							cityVlaues = (ArrayList<String>) object;

									ArrayAdapter<String> aa = new ArrayAdapter<String>(RegisterUserActivity.this,android.R.layout.simple_spinner_item, cityVlaues);
									//aa.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
									//spinState.setAdapter(aa);
									spinnercity.setThreshold(1);
									//spinnerstate.setDropDownBackgroundResource(R.color.spinback);
									spinnercity.setAdapter(aa);
									spinnercity.setOnClickListener(new OnClickListener() {
										
										@Override
										public void onClick(View v) {
											// TODO Auto-generated method stub
											spinnercity.showDropDown();
										}
									});	
									selectedcity = spinnercity.getText().toString();
		   						}

								@Override
								public void onErrorReceive(String string) {
									// TODO Auto-generated method stub
									
								} }).execute();
					
				}
			});
			
		}
	public void registerUser()
	{
		
		
		String req = "http://tmlmobilityservices.co.in:8080/CustomerApp_Restws/customerapp/user/registeruser";
		List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(13);
		nameValuePairs.add(new BasicNameValuePair("first_name",selectedfirsname));
		nameValuePairs.add(new BasicNameValuePair("last_name",selectedlastname));
		nameValuePairs.add(new BasicNameValuePair("gender",selectedgender));
		nameValuePairs.add(new BasicNameValuePair("contact_number",selectedcontactnumber));
		nameValuePairs.add(new BasicNameValuePair("alt_contact_number",selectedaltcontactnumber));
		nameValuePairs.add(new BasicNameValuePair("email_id",selectedemailid));
		nameValuePairs.add(new BasicNameValuePair("address",selectedaddress));
		nameValuePairs.add(new BasicNameValuePair("city",selectedcity));
		nameValuePairs.add(new BasicNameValuePair("pincode",selectedpincode));
		nameValuePairs.add(new BasicNameValuePair("district",selecteddist));
		nameValuePairs.add(new BasicNameValuePair("state",selectedstate));
		nameValuePairs.add(new BasicNameValuePair("user_id",selecteduserid));
		nameValuePairs.add(new BasicNameValuePair("password",selectedpassword));
		
		new AWS_WebServiceCall(RegisterUserActivity.this, req,ServiceHandler.POST ,Constants.registeruser,
				nameValuePairs,new AwsResponseCallback() {

					@Override
					public void onResponseReceive(Object object) {
						// TODO Auto-generated method stub
						boolean register = (boolean) object;
						Log.d("Here", "Register ");
						if(register)
						{
							 UserDetails.setFirst_name(selectedfirsname);
			                  UserDetails.setLast_name(selectedlastname);
			                  UserDetails.setGender(selectedgender);
			                  UserDetails.setEmail_id(selectedemailid);
			                  UserDetails.setContact_number(selectedcontactnumber);
			                  UserDetails.setAlt_contact_number(selectedaltcontactnumber);
			                  UserDetails.setAddress(selectedaddress);
			                  UserDetails.setCity(selectedcity);
			                  UserDetails.setPincode(selectedpincode);
			                  UserDetails.setDistrict(selecteddist);
			                  UserDetails.setState(selectedstate);
			                  UserDetails.setUser_id(selecteduserid);
			                  UserDetails.setPassword(selectedpassword);
							Toast.makeText(getApplicationContext(), "Registration succesful.", Toast.LENGTH_LONG).show();
							Log.d("Success", "Register ");

							Intent intent = new Intent(RegisterUserActivity.this, HomeActivity.class);
							startActivity(intent);
						}
						else
						{
							Log.d("Here", "Register ");

							Toast.makeText(getApplicationContext(), "Registration ussuccesful, please try again", Toast.LENGTH_LONG).show();
						}
					
					}

					@Override
					public void onErrorReceive(String string) {
						// TODO Auto-generated method stub
						
					//	Toast.makeText(getApplicationContext(), string, Toast.LENGTH_LONG).show();
						if(string.contains("Duplicate Entry"))
						{
						userid.setError("User id already exist , please change");
						userid.setFocusable(true);
						}
					}

					
				}).execute();
		
	}
	
	private String selectState(String tempstate2) {
		// TODO Auto-generated method stub
		if(tempstate2.equalsIgnoreCase("AN"))
			return "Andaman and Nicobar";
		else
			if(tempstate2.equalsIgnoreCase("AP"))
				return "Andhra Pradesh";
			else
				if(tempstate2.equalsIgnoreCase("TG"))
					return "Telangana";
				else
					if(tempstate2.equalsIgnoreCase("AR"))
						return "Arunachal Pradesh";
					else
						if(tempstate2.equalsIgnoreCase("AS"))
							return "Assam";
						else
							if(tempstate2.equalsIgnoreCase("BR"))
								return "Bihar";
							else
								if(tempstate2.equalsIgnoreCase("CH"))
									return "Chandigarh";
								else
									if(tempstate2.equalsIgnoreCase("CG"))
										return "Chattisgarh";
									else
										if(tempstate2.equalsIgnoreCase("CHN"))
											return "Chennai";
										else
											if(tempstate2.equalsIgnoreCase("DN"))
												return "Dadra, Nagarhaveli";
											else
												if(tempstate2.equalsIgnoreCase("DD"))
													return "Daman";
												else
													if(tempstate2.equalsIgnoreCase("DL"))
														return "Delhi";
													else
														if(tempstate2.equalsIgnoreCase("GA"))
															return "Goa";
														else
															if(tempstate2.equalsIgnoreCase("GJ"))
																return "Gujarat";
															else
																if(tempstate2.equalsIgnoreCase("HR"))
																	return "Haryana";
																else
																	if(tempstate2.equalsIgnoreCase("HP"))
																		return "Himachal Pradesh";
																	else
																		if(tempstate2.equalsIgnoreCase("JK"))
																			return "Jammu and Kashmir";
																		else
																			if(tempstate2.equalsIgnoreCase("JN"))
																				return "Jharkhand";
																			else
																				if(tempstate2.equalsIgnoreCase("KA"))
																					return "Karnataka";
																				else
																					if(tempstate2.equalsIgnoreCase("KL"))
																						return "Kerala";
																					else
																						if(tempstate2.equalsIgnoreCase("LD"))
																							return "Lakshwadeep";
																						else
																							if(tempstate2.equalsIgnoreCase("MP"))
																								return "Madhya Pradesh";
																							else
																								if(tempstate2.equalsIgnoreCase("MH"))
																									return "Maharashtra";
				if(tempstate2.equalsIgnoreCase("MN"))
					return "Manipur";
				else
					if(tempstate2.equalsIgnoreCase("ML"))
						return "Meghalaya";
					else
						if(tempstate2.equalsIgnoreCase("MZ"))
							return "Mizoram";
						else
							if(tempstate2.equalsIgnoreCase("NL"))
								return "Nagaland";
							else
								if(tempstate2.equalsIgnoreCase("NTN"))
									return "North Tamil Nadu";
								else
									if(tempstate2.equalsIgnoreCase("OR"))
										return "Orissa";
									else
										if(tempstate2.equalsIgnoreCase("PY"))
											return "Pondicherry";
										else
											if(tempstate2.equalsIgnoreCase("PB"))
												return "Punjab";
											else
												if(tempstate2.equalsIgnoreCase("RJ"))
													return "Rajasthan";
												else
													if(tempstate2.equalsIgnoreCase("SK"))
														return "Sikkim";
													else
														if(tempstate2.equalsIgnoreCase("TN"))
															return "Tamil Nadu";
														else
															if(tempstate2.equalsIgnoreCase("TR"))
																return "Tripura";
															else
																if(tempstate2.equalsIgnoreCase("UA"))
																	return "Uttrakhand";
																else
																	if(tempstate2.equalsIgnoreCase("UP"))
																		return "Uttar Pradesh";
																	else
																		if(tempstate2.equalsIgnoreCase("WB"))
																			return "West Bengal";
																		else
																			if(tempstate2.equalsIgnoreCase("APO"))
																				return "APO";
																			else
																				if(tempstate2.equalsIgnoreCase("Others"))
																				return "OT";
																				else
																					return "";
					
																
	}

}
>>>>>>> TMSC QA 3.4V
